[{"/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/index.tsx":"1","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/reportWebVitals.ts":"2","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/App.tsx":"3","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/shared/Login.tsx":"4","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/shared/Projects.tsx":"5","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/styled/Components.tsx":"6","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/API.tsx":"7","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/shared/ProjectView.tsx":"8","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/admin/Admin.tsx":"9","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/supervisor/Supervisor.tsx":"10","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/user/User.tsx":"11","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/admin/UserList.tsx":"12","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/util/Utils.tsx":"13","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/admin/Settings.tsx":"14","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/supervisor/Settings.tsx":"15","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/supervisor/UserList.tsx":"16","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/supervisor/Requests.tsx":"17","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/supervisor/RequestList.tsx":"18","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/user/Requests.tsx":"19","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/user/RequestList.tsx":"20","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/user/Settings.tsx":"21","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/shared/ResetPassword.tsx":"22"},{"size":500,"mtime":1623641813575,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1623641813579,"results":"25","hashOfConfig":"24"},{"size":1908,"mtime":1623863184705,"results":"26","hashOfConfig":"24"},{"size":1847,"mtime":1623882681485,"results":"27","hashOfConfig":"24"},{"size":2155,"mtime":1623644141895,"results":"28","hashOfConfig":"24"},{"size":4247,"mtime":1623875639692,"results":"29","hashOfConfig":"24"},{"size":66,"mtime":1623643977875,"results":"30","hashOfConfig":"24"},{"size":12208,"mtime":1623644184392,"results":"31","hashOfConfig":"24"},{"size":1972,"mtime":1623746732622,"results":"32","hashOfConfig":"24"},{"size":2421,"mtime":1623848279245,"results":"33","hashOfConfig":"24"},{"size":2020,"mtime":1623855837395,"results":"34","hashOfConfig":"24"},{"size":13055,"mtime":1623766652589,"results":"35","hashOfConfig":"24"},{"size":114,"mtime":1623690004628,"results":"36","hashOfConfig":"24"},{"size":5677,"mtime":1623856645592,"results":"37","hashOfConfig":"24"},{"size":5567,"mtime":1623856638265,"results":"38","hashOfConfig":"24"},{"size":5086,"mtime":1623849431288,"results":"39","hashOfConfig":"24"},{"size":1647,"mtime":1623849092092,"results":"40","hashOfConfig":"24"},{"size":3876,"mtime":1623849368555,"results":"41","hashOfConfig":"24"},{"size":4251,"mtime":1623853931265,"results":"42","hashOfConfig":"24"},{"size":3267,"mtime":1623853727048,"results":"43","hashOfConfig":"24"},{"size":5550,"mtime":1623858506368,"results":"44","hashOfConfig":"24"},{"size":4486,"mtime":1623882519422,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"go69o8",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/index.tsx",[],["100","101"],"/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/reportWebVitals.ts",[],"/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/App.tsx",[],"/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/shared/Login.tsx",[],"/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/shared/Projects.tsx",["102","103","104"],"/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/styled/Components.tsx",[],"/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/API.tsx",[],"/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/shared/ProjectView.tsx",["105","106","107","108","109","110","111","112","113","114","115"],"/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/admin/Admin.tsx",[],"/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/supervisor/Supervisor.tsx",[],"/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/user/User.tsx",[],"/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/admin/UserList.tsx",["116","117","118","119","120","121","122","123","124","125","126"],"import { useContext, useEffect, useState } from 'react';\nimport { ContentPage, ContentPageContext, Popup, Label, Input, Select, ActionButton, Form, DangerButton } from '../styled/Components';\nimport { AuthContext } from '../App';\nimport { formatDate } from '../util/Utils';\nimport apiLink from '../API';\nimport { useRouteMatch, useParams } from 'react-router-dom';\nimport { User } from '../types/Common';\n\n/** \n* Displays the user list page\n* @function UserList\n* */\nconst UserList = (props: any) => {\n\tconst { userId } = useParams() as any;\n\tconst authContext = useContext(AuthContext);\n\tconst { url } = useRouteMatch();\n\n\t/* Set the location list in the header of the page */\n\tconst contentPageContext = useContext(ContentPageContext);\n\tuseEffect(() => {\n\t\tcontentPageContext.setLocationList([{ title: \"User list\", url: url }]);\n\t}, []);\n\n\t/* Set up the state that holds the users, and also a value for updating the\n\t* list with a callback*/\n\tconst [users, setUsers] = useState<User[]>([]);\n\tconst [shouldUpdate, setShouldUpdate] = useState(0);\n\tuseEffect(() => {\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tfetch(`${apiLink}/admin/${userId}/users`, {\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tconst usrs = res.result as User[];\n\t\t\t\t\tsetUsers(usrs.filter(usr => usr.id != authContext.userId));\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}, [userId, shouldUpdate]);\n\n\t/* Determines whether the add user form is displayed*/\n\tconst [addUser, setAddUser] = useState(false);\n\n\t/* Create a list of supervisors from the current users */\n\tconst supervisors = users.filter(user => user.type === \"supervisor\");\n\n\t/* The callback which updates the list */\n\tconst updateList = () => {\n\t\tsetShouldUpdate(shouldUpdate + 1);\n\t}\n\treturn (\n\t\t<div className=\"flex flex-col\">\n\t\t\t<ActionButton onClick={() => setAddUser(true)} background=\"green\" className=\"p-1 mx-10 my-5 w-14\">\n\t\t\t\t<i className=\"material-icons\">add</i>\n\t\t\t</ActionButton>\n\n\t\t\t{addUser ? <AddUserForm\n\t\t\t\tupdate={updateList}\n\t\t\t\tsupervisors={supervisors}\n\t\t\t\tclose={() => setAddUser(false)} /> : null}\n\n\t\t\t<div className=\"mx-10 border-l-2 border-r-2 border-b-2 border-gray-800\">\n\t\t\t\t<div className=\"bg-gray-800 flex flex-row justify-center w-full text-gray-300 p-2\">\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Type</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Email</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Firstname</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Lastname</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Supervisor</p>\n\t\t\t\t</div>\n\t\t\t\t{users.map(user => <UserItem key={user.id}\n\t\t\t\t\tupdate={updateList}\n\t\t\t\t\tuser={user}\n\t\t\t\t\tsupervisors={supervisors} />)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n/** \n* Displays a user list item\n* @function UserItem\n* @param {Object} props - The props of the component\n* @param {User} props.user - The user this item represents\n* @param {User[]} props.supervisors - The list of available supervisors\n* @param {()=>void} props.update - Callback for updating the main user list\n* @returns A single user item for the user list\n* */\nconst UserItem = (props: { user: User, supervisors: User[], update: () => void }) => {\n\tconst { user, supervisors } = props;\n\n\t/* The state which determines whether the popup window to modify a user is\n\t* shown */\n\tconst [popupShown, setPopupShown] = useState(false);\n\treturn (\n\t\t<>\n\t\t\t<div onClick={() => setPopupShown(true)}\n\t\t\t\tclassName=\"flex flex-row justify-center w-full hover:bg-gray-400 p-5 border-b border-gray-400\">\n\t\t\t\t<p className=\"flex-1 text-center\">{user.type}</p>\n\t\t\t\t<p className=\"flex-1 text-center\">{user.email}</p>\n\t\t\t\t<p className=\"flex-1 text-center\">{user.firstname}</p>\n\t\t\t\t<p className=\"flex-1 text-center\">{user.lastname}</p>\n\t\t\t\t<p className=\"flex-1 text-center\">{user.supervisor?.firstname}</p>\n\t\t\t</div>\n\t\t\t{popupShown ? <UserViewForm\n\t\t\t\tuser={user}\n\t\t\t\tupdate={props.update}\n\t\t\t\tclose={() => setPopupShown(false)}\n\t\t\t\tsupervisors={supervisors} /> : null}\n\t\t</>\n\t);\n}\n\n/** \n* Displays the form to modify a user\n* @function UserViewForm\n* @param {Object} props - The props of the component\n* @param {User} props.user - The user this item represents\n* @param {User[]} props.supervisors - The list of available supervisors\n* @param {()=>void} props.update - Callback for updating the main user list\n* @param {()=>void} props.close - Callback for closing the updat form\n* @returns A popup window which displays the user\n* */\nconst UserViewForm = (props: {\n\tsupervisors: User[],\n\tuser: User,\n\tupdate: () => void,\n\tclose: () => void\n}) => {\n\t/* Get the authentication context and destructure elements */\n\tconst authContext = useContext(AuthContext);\n\tconst { close, supervisors } = props;\n\tlet { user } = props;\n\n\t/* The state which will hold the form infomation */\n\tconst [form, setForm] = useState<User>({ ...user });\n\n\tconst onChange = (event: React.ChangeEvent) => {\n\t\tevent.preventDefault();\n\t\tconst { name, value } = event.target as any;\n\n\t\tif (name === \"type\") {\n\t\t\tif (value === \"admin\" || value === \"supervisor\") {\n\t\t\t\tsetForm({ ...form, [name]: value, supervisor: null });\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tsetForm({ ...form, [name]: value });\n\t}\n\n\tconst changeSupervisor = async (event: React.ChangeEvent) => {\n\t\tevent.preventDefault();\n\t\tconst { name, value } = event.target as any;\n\t\tif (value == \"0\") {\n\t\t\tsetForm({ ...form, supervisor: null });\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = 0; i < supervisors.length; i++) {\n\t\t\tif (supervisors[i].id == value) {\n\t\t\t\tsetForm({ ...form, supervisor: supervisors[i] });\n\t\t\t}\n\t\t}\n\t}\n\n\tconst onSubmit = async (event: React.FormEvent) => {\n\t\tevent.preventDefault();\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tawait fetch(`${apiLink}/admin/${authContext.userId}/users/${user.id}`, {\n\t\t\tmethod: \"put\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"Authorization\": bearer\n\t\t\t},\n\t\t\tbody: JSON.stringify(form)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\talert(res.message);\n\t\t\t\t\tfor (const property in user) {\n\t\t\t\t\t\t(user as any)[property] = (form as any)[property];\n\t\t\t\t\t}\n\t\t\t\t\tclose();\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(res);\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}\n\n\tconst onDelete = async (event: React.FormEvent) => {\n\t\tevent.preventDefault();\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tawait fetch(`${apiLink}/admin/${authContext.userId}/users/${user.id}`, {\n\t\t\tmethod: \"delete\",\n\t\t\theaders: {\n\t\t\t\t\"Authorization\": bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\talert(res.message);\n\t\t\t\t\tprops.update();\n\t\t\t\t\tclose();\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(res);\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}\n\n\treturn (\n\t\t<Popup>\n\t\t\t<div className=\"flex flex-col items-stretch w-1/2 min-w-min min-h-screen m-auto bg-gray-200 p-5 text-gray-800\">\n\n\t\t\t\t<div className=\"flex flex-row justify-center\">\n\t\t\t\t\t<p className=\"font-bold flex-1 text-lg text-center\">{`${user.firstname} ${user.lastname}`}</p>\n\t\t\t\t\t<i onClick={props.close} className=\"material-icons cursor-pointer text-gray-600 hover:text-gray-800\">close</i>\n\t\t\t\t</div>\n\n\t\t\t\t<Form onSubmit={onSubmit}>\n\t\t\t\t\t<Label>\n\t\t\t\t\t\t<p>Email</p>\n\t\t\t\t\t\t<Input type=\"text\" name=\"email\" onChange={onChange} value={form.email}></Input>\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Label>\n\t\t\t\t\t\t<p>Firstname</p>\n\t\t\t\t\t\t<Input type=\"text\" name=\"firstname\" onChange={onChange} value={form.firstname}></Input>\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Label>\n\t\t\t\t\t\t<p>Lastname</p>\n\t\t\t\t\t\t<Input type=\"text\" name=\"lastname\" onChange={onChange} value={form.lastname}></Input>\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Label>\n\t\t\t\t\t\t<p>Type</p>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tname=\"type\" onChange={onChange}\n\t\t\t\t\t\t\tvalue={form.type}>\n\t\t\t\t\t\t\t<option value={\"user\"}>User</option>\n\t\t\t\t\t\t\t<option value={\"supervisor\"}>Supervisor</option>\n\t\t\t\t\t\t\t<option value={\"admin\"}>Admin</option>\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Label>\n\t\t\t\t\t\t<p>Start date</p>\n\t\t\t\t\t\t<Input type=\"date\" name=\"startDate\" onChange={onChange} value={form.startDate}></Input>\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Label>\n\t\t\t\t\t\t<p>Supervisor</p>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tdisabled={form.type === \"supervisor\" || form.type === \"admin\"}\n\t\t\t\t\t\t\tname=\"supervisor\" onChange={changeSupervisor}\n\t\t\t\t\t\t\tvalue={form.supervisor == null ? 0 : form.supervisor.id}>\n\n\t\t\t\t\t\t\t<option value={0}>{\"No supervisor\"}</option>\n\t\t\t\t\t\t\t{supervisors.map(supervisor =>\n\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\tkey={supervisor.id}\n\t\t\t\t\t\t\t\t\tvalue={supervisor.id}>{`${supervisor.firstname} ${supervisor.lastname}`}</option>)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</Label>\n\t\t\t\t\t<ActionButton className=\"p-3 mt-3 w-40\">Update</ActionButton>\n\t\t\t\t\t<DangerButton onClick={onDelete} className=\"p-3 mt-3 w-40\">Delete</DangerButton>\n\t\t\t\t</Form>\n\n\t\t\t</div>\n\t\t</Popup>\n\t);\n}\n\n/** \n* Displays the form to add a user\n* @function UserViewForm\n* @param {Object} props - The props of the component\n* @param {User[]} props.supervisors - The list of available supervisors\n* @param {()=>void} props.update - Callback for updating the main user list\n* @param {()=>void} props.close - Callback for closing the updat form\n* @returns A popup window which displays the user\n* */\nconst AddUserForm = (props: {\n\tsupervisors: User[],\n\tupdate: () => void,\n\tclose: () => void\n}) => {\n\t/* Get the authentication context and destructure elements */\n\tconst authContext = useContext(AuthContext);\n\tconst { close, supervisors } = props;\n\n\t/* The state which will hold the information about the form */\n\tconst [form, setForm] = useState<User>({\n\t\tid: 0,\n\t\tfirstname: \"\",\n\t\tlastname: \"\",\n\t\tpassword: \"\",\n\t\temail: \"\",\n\t\ttype: \"user\",\n\t\tsupervisor: null,\n\t\tstartDate: new Date(Date.now()).toUTCString()\n\t});\n\n\tconst onChange = (event: React.ChangeEvent) => {\n\t\tevent.preventDefault();\n\t\tconst { name, value } = event.target as any;\n\n\t\tif (name === \"type\") {\n\t\t\tif (value === \"admin\" || value === \"supervisor\") {\n\t\t\t\tsetForm({ ...form, [name]: value, supervisor: null });\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tsetForm({ ...form, [name]: value });\n\t}\n\n\tconst changeSupervisor = async (event: React.ChangeEvent) => {\n\t\tevent.preventDefault();\n\t\tconst { name, value } = event.target as any;\n\t\tif (value == \"0\") {\n\t\t\tsetForm({ ...form, supervisor: null });\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = 0; i < supervisors.length; i++) {\n\t\t\tif (supervisors[i].id == value) {\n\t\t\t\tsetForm({ ...form, supervisor: supervisors[i] });\n\t\t\t}\n\t\t}\n\t}\n\n\tconst onSubmit = async (event: React.FormEvent) => {\n\t\tevent.preventDefault();\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tawait fetch(`${apiLink}/admin/${authContext.userId}/users`, {\n\t\t\tmethod: \"post\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"Authorization\": bearer\n\t\t\t},\n\t\t\tbody: JSON.stringify(form)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\talert(res.message);\n\t\t\t\t\tprops.update();\n\t\t\t\t\tclose();\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(res);\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}\n\n\n\treturn (\n\t\t<Popup>\n\t\t\t<div className=\"flex flex-col items-stretch w-1/2 min-w-min min-h-screen m-auto bg-gray-200 p-5 text-gray-800\">\n\n\t\t\t\t<div className=\"flex flex-row justify-center\">\n\t\t\t\t\t<p className=\"font-bold flex-1 text-lg text-center\">Add User</p>\n\t\t\t\t\t<i onClick={props.close} className=\"material-icons cursor-pointer text-gray-600 hover:text-gray-800\">close</i>\n\t\t\t\t</div>\n\n\t\t\t\t<Form onSubmit={onSubmit}>\n\t\t\t\t\t<Label>\n\t\t\t\t\t\t<p>Email</p>\n\t\t\t\t\t\t<Input type=\"text\" name=\"email\" onChange={onChange} value={form.email}></Input>\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Label>\n\t\t\t\t\t\t<p>Password</p>\n\t\t\t\t\t\t<Input type=\"text\" name=\"password\" onChange={onChange} value={form.password}></Input>\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Label>\n\t\t\t\t\t\t<p>Firstname</p>\n\t\t\t\t\t\t<Input type=\"text\" name=\"firstname\" onChange={onChange} value={form.firstname}></Input>\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Label>\n\t\t\t\t\t\t<p>Lastname</p>\n\t\t\t\t\t\t<Input type=\"text\" name=\"lastname\" onChange={onChange} value={form.lastname}></Input>\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Label>\n\t\t\t\t\t\t<p>Type</p>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tname=\"type\" onChange={onChange}\n\t\t\t\t\t\t\tvalue={form.type}>\n\t\t\t\t\t\t\t<option value={\"user\"}>User</option>\n\t\t\t\t\t\t\t<option value={\"supervisor\"}>Supervisor</option>\n\t\t\t\t\t\t\t<option value={\"admin\"}>Admin</option>\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Label>\n\t\t\t\t\t\t<p>Start date</p>\n\t\t\t\t\t\t<Input type=\"date\" name=\"startDate\" onChange={onChange} value={form.startDate}></Input>\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Label>\n\t\t\t\t\t\t<p>Supervisor</p>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tdisabled={form.type === \"supervisor\" || form.type === \"admin\"}\n\t\t\t\t\t\t\tname=\"supervisor\" onChange={changeSupervisor}\n\t\t\t\t\t\t\tvalue={form.supervisor == null ? 0 : form.supervisor.id}>\n\n\t\t\t\t\t\t\t<option value={0}>{\"No supervisor\"}</option>\n\t\t\t\t\t\t\t{supervisors.map(supervisor =>\n\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\tkey={supervisor.id}\n\t\t\t\t\t\t\t\t\tvalue={supervisor.id}>{`${supervisor.firstname} ${supervisor.lastname}`}</option>)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</Label>\n\t\t\t\t\t<ActionButton className=\"p-3 mt-3 w-40\">Add</ActionButton>\n\t\t\t\t</Form>\n\n\t\t\t</div>\n\t\t</Popup>\n\t);\n}\n\nexport default UserList;\n","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/util/Utils.tsx",[],"/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/admin/Settings.tsx",["127","128","129","130","131","132","133"],"import { useContext, useEffect, useState } from 'react';\nimport { ContentPage, ContentPageContext, Popup, Label, Input, Select, ActionButton, Form, DangerButton } from '../styled/Components';\nimport { AuthContext } from '../App';\nimport { formatDate } from '../util/Utils';\nimport apiLink from '../API';\nimport { useRouteMatch, useParams, useHistory } from 'react-router-dom';\nimport { User } from '../types/Common';\n\n/** \n* Displays the settings page\n* @function Settings\n* */\nconst Settings = (props: any) => {\n\t/* Get the authentication context and destructure elements */\n\tconst authContext = useContext(AuthContext);\n\tconst contentPageContext = useContext(ContentPageContext);\n\tconst { url } = useRouteMatch();\n\tuseEffect(() => {\n\t\tcontentPageContext.setLocationList([{ title: \"Update personal info\", url: url }]);\n\t}, [authContext.userId]);\n\treturn (\n\t\t<ContentPage>\n\t\t\t<div className=\"p-10\">\n\t\t\t\t<PersonalInfo />\n\t\t\t\t<PasswordForm />\n\t\t\t</div>\n\t\t</ContentPage>\n\t);\n}\n\n/** \n* Displays and is able to modify personal infor \n* @function PersonalInfo\n* @returns The personal info view\n* */\n\nconst PersonalInfo = () => {\n\t/* Get the authentication context and destructure elements */\n\tconst authContext = useContext(AuthContext);\n\tconst history = useHistory();\n\n\t/* The state which will hold the form infomation */\n\tconst [form, setForm] = useState<User>({\n\t\tid: 0,\n\t\tfirstname: \"\",\n\t\tlastname: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t\ttype: \"admin\",\n\t\tstartDate: new Date(Date.now()).toString(),\n\t\tsupervisor: null\n\t});\n\tuseEffect(() => {\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tfetch(`${apiLink}/admin/${authContext.userId}`, {\n\t\t\theaders: {\n\t\t\t\t\"Authorization\": bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tsetForm(res.result);\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}, [authContext.userId]);\n\n\tconst onChange = (event: React.ChangeEvent) => {\n\t\tevent.preventDefault();\n\t\tconst { name, value } = event.target as any;\n\n\t\tsetForm({ ...form, [name]: value });\n\t}\n\n\tconst onSubmit = async (event: React.FormEvent) => {\n\t\tevent.preventDefault();\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tawait fetch(`${apiLink}/admin/${authContext.userId}`, {\n\t\t\tmethod: \"put\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"Authorization\": bearer\n\t\t\t},\n\t\t\tbody: JSON.stringify(form)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\talert(res.message + \". Please relogin to confirm information!\");\n\t\t\t\t\tauthContext.signOut();\n\t\t\t\t\thistory.push(\"/\");\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}\n\n\treturn (\n\t\t<div className=\"flex flex-col items-stretch min-w-min bg-gray-100 p-10 text-gray-800 rounded-xl shadow-xl\">\n\n\t\t\t<div className=\"flex flex-row justify-center\">\n\t\t\t\t<p className=\"font-bold flex-1 text-lg text-center\">{`${form.firstname} ${form.lastname}`}</p>\n\t\t\t</div>\n\n\t\t\t<Form onSubmit={onSubmit}>\n\t\t\t\t<Label>\n\t\t\t\t\t<p>Email</p>\n\t\t\t\t\t<Input type=\"text\" name=\"email\" onChange={onChange} value={form.email}></Input>\n\t\t\t\t</Label>\n\t\t\t\t<Label>\n\t\t\t\t\t<p>Firstname</p>\n\t\t\t\t\t<Input type=\"text\" name=\"firstname\" onChange={onChange} value={form.firstname}></Input>\n\t\t\t\t</Label>\n\t\t\t\t<Label>\n\t\t\t\t\t<p>Lastname</p>\n\t\t\t\t\t<Input type=\"text\" name=\"lastname\" onChange={onChange} value={form.lastname}></Input>\n\t\t\t\t</Label>\n\t\t\t\t<Label>\n\t\t\t\t\t<p>Start date</p>\n\t\t\t\t\t<Input type=\"date\" name=\"startDate\" onChange={onChange} value={form.startDate}></Input>\n\t\t\t\t</Label>\n\t\t\t\t<ActionButton className=\"p-3 mt-3 w-40\">Update</ActionButton>\n\t\t\t</Form>\n\n\t\t</div>\n\t);\n}\n\n/** \n* Displays the form that modifies the user password\n* @function PasswordForm\n* @returns Change password view \n* */\nconst PasswordForm = () => {\n\tconst authContext = useContext(AuthContext);\n\tconst history = useHistory();\n\tconst [passwordForm , setPasswordForm] = useState({\n\t\toldPassword: \"\",\n\t\tnewPassword: \"\",\n\t\tconfirmPassword: \"\"\n\t});\n\n\tconst onChange = (event: React.ChangeEvent) => {\n\t\tevent.preventDefault();\n\t\tconst { name, value } = event.target as any;\n\t\tsetPasswordForm({ ...passwordForm, [name]: value });\n\t}\n\n\n\tconst onSubmit = async (event: React.FormEvent) => {\n\t\tevent.preventDefault();\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tawait fetch(`${apiLink}/admin/${authContext.userId}/changepassword`, {\n\t\t\tmethod: \"put\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"Authorization\": bearer\n\t\t\t},\n\t\t\tbody: JSON.stringify(passwordForm)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\talert(res.message + \". Please relogin to confirm information!\");\n\t\t\t\t\tauthContext.signOut();\n\t\t\t\t\thistory.push(\"/\");\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}\n\n\n\treturn (\n\t\t<div className=\"mt-16 flex flex-col items-stretch min-w-min bg-gray-100 p-10 text-gray-800 rounded-xl shadow-xl\">\n\n\t\t\t<div className=\"flex flex-row justify-center\">\n\t\t\t\t<p className=\"font-bold flex-1 text-lg text-center\">Change Password</p>\n\t\t\t</div>\n\n\t\t\t<Form onSubmit={onSubmit}>\n\t\t\t\t<Label>\n\t\t\t\t\t<p>Old password</p>\n\t\t\t\t\t<Input type=\"text\" name=\"email\" onChange={onChange} value={passwordForm.oldPassword}></Input>\n\t\t\t\t</Label>\n\t\t\t\t<Label>\n\t\t\t\t\t<p>New password</p>\n\t\t\t\t\t<Input type=\"text\" name=\"email\" onChange={onChange} value={passwordForm.newPassword}></Input>\n\t\t\t\t</Label>\n\t\t\t\t<Label>\n\t\t\t\t\t<p>Confirm password</p>\n\t\t\t\t\t<Input type=\"text\" name=\"firstname\" onChange={onChange} value={passwordForm.confirmPassword}></Input>\n\t\t\t\t</Label>\n\t\t\t\t<ActionButton className=\"p-3 mt-3 w-40\">Update</ActionButton>\n\t\t\t</Form>\n\n\t\t</div>\n\t);\n}\n\n\nexport default Settings;\n","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/supervisor/Settings.tsx",["134","135","136","137","138","139","140"],"import { useContext, useEffect, useState } from 'react';\nimport { ContentPage, ContentPageContext, Popup, Label, Input, Select, ActionButton, Form, DangerButton } from '../styled/Components';\nimport { AuthContext } from '../App';\nimport { formatDate } from '../util/Utils';\nimport apiLink from '../API';\nimport { useRouteMatch, useParams, useHistory } from 'react-router-dom';\nimport { User } from '../types/Common';\n\n/** \n* Displays the settings page\n* @function Settings\n* */\nconst Settings = (props: any) => {\n\t/* Get the authentication context and destructure elements */\n\tconst authContext = useContext(AuthContext);\n\tconst contentPageContext = useContext(ContentPageContext);\n\tconst { url } = useRouteMatch();\n\tuseEffect(() => {\n\t\tcontentPageContext.setLocationList([{ title: \"Update personal info\", url: url }]);\n\t}, [authContext.userId]);\n\treturn (\n\t\t<ContentPage className=\"p-10\">\n\t\t\t<div className=\"p-10\">\n\t\t\t\t<PersonalInfo />\n\t\t\t\t<PasswordForm />\n\t\t\t</div>\n\t\t</ContentPage>\n\t);\n}\n\n/** \n* Displays and is able to modify personal infor \n* @function PersonalInfo\n* @returns The personal info view\n* */\nconst PersonalInfo = () => {\n\t/* Get the authentication context and destructure elements */\n\tconst authContext = useContext(AuthContext);\n\tconst history = useHistory();\n\n\t/* The state which will hold the form infomation */\n\tconst [form, setForm] = useState<User>({\n\t\tid: 0,\n\t\tfirstname: \"\",\n\t\tlastname: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t\ttype: \"admin\",\n\t\tstartDate: new Date(Date.now()).toString(),\n\t\tsupervisor: null\n\t});\n\tuseEffect(() => {\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tfetch(`${apiLink}/supervisor/${authContext.userId}`, {\n\t\t\theaders: {\n\t\t\t\t\"Authorization\": bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tsetForm(res.result);\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}, [authContext.userId]);\n\n\tconst onChange = (event: React.ChangeEvent) => {\n\t\tevent.preventDefault();\n\t\tconst { name, value } = event.target as any;\n\n\t\tsetForm({ ...form, [name]: value });\n\t}\n\n\tconst onSubmit = async (event: React.FormEvent) => {\n\t\tevent.preventDefault();\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tawait fetch(`${apiLink}/supervisor/${authContext.userId}`, {\n\t\t\tmethod: \"put\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"Authorization\": bearer\n\t\t\t},\n\t\t\tbody: JSON.stringify(form)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\talert(res.message + \". Please relogin to confirm information!\");\n\t\t\t\t\tauthContext.signOut();\n\t\t\t\t\thistory.push(\"/\");\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}\n\n\treturn (\n\t\t<div className=\"flex flex-col items-stretch min-w-min bg-gray-100 p-10 text-gray-800 rounded-xl shadow-xl\">\n\n\t\t\t<div className=\"flex flex-row justify-center\">\n\t\t\t\t<p className=\"font-bold flex-1 text-lg text-center\">{`${form.firstname} ${form.lastname}`}</p>\n\t\t\t</div>\n\n\t\t\t<Form onSubmit={onSubmit}>\n\t\t\t\t<Label>\n\t\t\t\t\t<p>Email</p>\n\t\t\t\t\t<Input type=\"text\" name=\"email\" onChange={onChange} value={form.email}></Input>\n\t\t\t\t</Label>\n\t\t\t\t<Label>\n\t\t\t\t\t<p>Firstname</p>\n\t\t\t\t\t<Input type=\"text\" name=\"firstname\" onChange={onChange} value={form.firstname}></Input>\n\t\t\t\t</Label>\n\t\t\t\t<Label>\n\t\t\t\t\t<p>Lastname</p>\n\t\t\t\t\t<Input type=\"text\" name=\"lastname\" onChange={onChange} value={form.lastname}></Input>\n\t\t\t\t</Label>\n\t\t\t\t<ActionButton className=\"p-3 mt-3 w-40\">Update</ActionButton>\n\t\t\t</Form>\n\n\t\t</div>\n\t);\n}\n\n/** \n* Displays the form that modifies the user password\n* @function PasswordForm\n* @returns Change password view \n* */\nconst PasswordForm = () => {\n\tconst authContext = useContext(AuthContext);\n\tconst history = useHistory();\n\tconst [passwordForm , setPasswordForm] = useState({\n\t\toldPassword: \"\",\n\t\tnewPassword: \"\",\n\t\tconfirmPassword: \"\"\n\t});\n\n\tconst onChange = (event: React.ChangeEvent) => {\n\t\tevent.preventDefault();\n\t\tconst { name, value } = event.target as any;\n\t\tsetPasswordForm({ ...passwordForm, [name]: value });\n\t}\n\n\n\tconst onSubmit = async (event: React.FormEvent) => {\n\t\tevent.preventDefault();\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tawait fetch(`${apiLink}/supervisor/${authContext.userId}/changepassword`, {\n\t\t\tmethod: \"put\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"Authorization\": bearer\n\t\t\t},\n\t\t\tbody: JSON.stringify(passwordForm)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\talert(res.message + \". Please relogin to confirm information!\");\n\t\t\t\t\tauthContext.signOut();\n\t\t\t\t\thistory.push(\"/\");\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}\n\n\n\treturn (\n\t\t<div className=\"mt-16 flex flex-col items-stretch min-w-min bg-gray-100 p-10 text-gray-800 rounded-xl shadow-xl\">\n\n\t\t\t<div className=\"flex flex-row justify-center\">\n\t\t\t\t<p className=\"font-bold flex-1 text-lg text-center\">Change Password</p>\n\t\t\t</div>\n\n\t\t\t<Form onSubmit={onSubmit}>\n\t\t\t\t<Label>\n\t\t\t\t\t<p>Old password</p>\n\t\t\t\t\t<Input type=\"text\" name=\"email\" onChange={onChange} value={passwordForm.oldPassword}></Input>\n\t\t\t\t</Label>\n\t\t\t\t<Label>\n\t\t\t\t\t<p>New password</p>\n\t\t\t\t\t<Input type=\"text\" name=\"email\" onChange={onChange} value={passwordForm.newPassword}></Input>\n\t\t\t\t</Label>\n\t\t\t\t<Label>\n\t\t\t\t\t<p>Confirm password</p>\n\t\t\t\t\t<Input type=\"text\" name=\"firstname\" onChange={onChange} value={passwordForm.confirmPassword}></Input>\n\t\t\t\t</Label>\n\t\t\t\t<ActionButton className=\"p-3 mt-3 w-40\">Update</ActionButton>\n\t\t\t</Form>\n\n\t\t</div>\n\t);\n}\n\n\nexport default Settings;\n","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/supervisor/UserList.tsx",["141","142","143","144","145","146","147","148","149","150","151","152","153","154"],"import { useContext, useEffect, useState } from 'react';\nimport { ContentPage, ContentPageContext, Popup, Label, Input, Select, ActionButton, Form, DangerButton } from '../styled/Components';\nimport { AuthContext } from '../App';\nimport apiLink from '../API';\nimport { Switch, Route, Link, useHistory, useRouteMatch, useParams, useLocation } from 'react-router-dom';\nimport { User, Request } from '../types/Common';\nimport RequestList from './RequestList';\n\n\n/** The users page */\nconst Users = (props: any) => {\n\tconst { url, path } = useRouteMatch();\n\treturn (\n\t\t<Switch>\n\n\t\t\t<Route path={`${path}/:requestsUserId/`}>\n\t\t\t\t<UserRequestList />\n\t\t\t</Route>\n\n\t\t\t<Route path={`${path}/`}>\n\t\t\t\t<UserList />\n\t\t\t</Route>\n\n\t\t</Switch>\n\t);\n}\n\n/** \n* Displays the user list page\n* @function UserList\n* */\nconst UserList = (props: any) => {\n\tconst { userId } = useParams() as any;\n\tconst authContext = useContext(AuthContext);\n\tconst { url } = useRouteMatch();\n\n\t/* Set the location list in the header of the page */\n\tconst contentPageContext = useContext(ContentPageContext);\n\tuseEffect(() => {\n\t\tcontentPageContext.setLocationList([{ title: \"User list\", url: url }]);\n\t}, []);\n\n\t/* Set up the state that holds the users, and also a value for updating the\n\t* list with a callback*/\n\tconst [users, setUsers] = useState<User[]>([]);\n\tuseEffect(() => {\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tfetch(`${apiLink}/supervisor/${userId}/users`, {\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tconst usrs = res.result as User[];\n\t\t\t\t\tsetUsers(usrs.filter(usr => usr.id != authContext.userId));\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}, [userId]);\n\n\treturn (\n\t\t<div className=\"flex flex-col\">\n\t\t\t<div className=\"mx-10 border-l-2 border-r-2 border-b-2 border-gray-800 bg-gray-100 text-gray-600\">\n\t\t\t\t<div className=\"bg-gray-800 flex flex-row justify-center w-full text-gray-300 p-2\">\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Type</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Email</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Firstname</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Lastname</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">See requests</p>\n\t\t\t\t</div>\n\t\t\t\t{users.map(user => <UserItem key={user.id} user={user} />)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n/**\n* Displays a user list item\n* @function UserItem\n* @param {Object} props - The props of the component\n* @param {User} props.user - The user this item represents\n* @param {User[]} props.supervisors - The list of available supervisors\n* @returns A single user item for the user list\n* */\nconst UserItem = (props: { user: User }) => {\n\tconst { user } = props;\n\tconst history = useHistory();\n\tconst { url } = useRouteMatch();\n\tconst onClick = () => {\n\t\thistory.push(`${url}/${user.id}`, user);\n\t}\n\treturn (\n\t\t<div className=\"flex flex-row justify-center w-full p-5 border-b border-gray-400\">\n\t\t\t<p className=\"flex-1 text-center\">{user.type}</p>\n\t\t\t<p className=\"flex-1 text-center\">{user.email}</p>\n\t\t\t<p className=\"flex-1 text-center\">{user.firstname}</p>\n\t\t\t<p className=\"flex-1 text-center\">{user.lastname}</p>\n\t\t\t<div className=\"flex-1 flex justify-center items-center\">\n\t\t\t\t<button onClick={onClick} className=\"focus:outline-none flex justify-center \n\t\t\t\t\titems-center bg-transparent text-black hover:bg-gray-300 rounded-full p-1\">\n\t\t\t\t\t<i className=\"material-icons hover:cursor-pointer\">arrow_right</i>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n/** Displays the requests of a user */\nconst UserRequestList = (props: any) => {\n\tconst authContext = useContext(AuthContext);\n\tconst { url } = useRouteMatch();\n\tconst location = useLocation();\n\tconst user: User = location.state as User;\n\n\t/* Set the location list in the header of the page */\n\tconst contentPageContext = useContext(ContentPageContext);\n\tuseEffect(() => {\n\t\tconst locationList = contentPageContext.getLocationList();\n\t\tconst name = `${user.firstname} ${user.lastname}`;\n\t\tcontentPageContext.setLocationList([\n\t\t\t...locationList,\n\t\t\t{ title: name, url: url, state: user }\n\t\t]);\n\t}, []);\n\n\t/* Set up the state that holds the requests, and also a value for updating the\n\t* list with a callback*/\n\tconst [requests, setRequests] = useState<Request[]>([]);\n\tuseEffect(() => {\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tfetch(`${apiLink}/supervisor/${authContext.userId}/users/${user.id}/requests`, {\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tsetRequests(res.result);\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}, [authContext.userId, user.id]);\n\n\n\treturn (\n\t\t<div className=\"flex flex-col\">\n\t\t\t<ActionButton background=\"green\" className=\"p-1 mx-10 my-5 w-24 flex flex-row justify-center items-center\">\n\t\t\t\t<p>Export</p>\n\t\t\t\t<i className=\"material-icons\">description</i>\n\t\t\t</ActionButton>\n\t\t\t<RequestList requests={requests} />\n\t\t</div>\n\t);\n}\n\nexport default Users;\n","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/supervisor/Requests.tsx",["155","156","157","158","159","160","161","162","163","164","165","166","167"],"import { useContext, useEffect, useState } from 'react';\nimport { ContentPage, ContentPageContext, Popup, Label, Input, Select, ActionButton, Form, DangerButton } from '../styled/Components';\nimport { AuthContext } from '../App';\nimport { formatDate } from '../util/Utils';\nimport apiLink from '../API';\nimport { useRouteMatch, useParams } from 'react-router-dom';\nimport { Request, User } from '../types/Common';\nimport RequestList from './RequestList';\n\n/** \n* Displays the user list page\n* @function RequestList\n* */\nconst Requests = (props: any) => {\n\tconst { userId } = useParams() as any;\n\tconst authContext = useContext(AuthContext);\n\tconst { url } = useRouteMatch();\n\n\t/* Set the location list in the header of the page */\n\tconst contentPageContext = useContext(ContentPageContext);\n\tuseEffect(() => {\n\t\tcontentPageContext.setLocationList([{ title: \"Request list\", url: url }]);\n\t}, []);\n\n\t/* Set up the state that holds the requests, and also a value for updating the\n\t* list with a callback*/\n\tconst [requests, setRequests] = useState<Request[]>([]);\n\tuseEffect(() => {\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tfetch(`${apiLink}/supervisor/${userId}/requests`, {\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tconst usrs = res.result as Request[];\n\t\t\t\t\tsetRequests(usrs.filter(usr => usr.id != authContext.userId));\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}, [userId]);\n\n\treturn (\n\t\t<div className=\"flex flex-col\">\n\t\t\t<RequestList requests={requests} />\n\t\t</div>\n\t);\n}\n\nexport default Requests;\n","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/supervisor/RequestList.tsx",["168","169","170","171","172","173","174","175","176","177","178","179","180","181","182"],"import { useContext, useEffect, useState } from 'react';\nimport { ContentPage, ContentPageContext, Popup, Label, Input, Select, ActionButton, Form, DangerButton } from '../styled/Components';\nimport { AuthContext } from '../App';\nimport { formatDate } from '../util/Utils';\nimport apiLink from '../API';\nimport { useRouteMatch, useParams } from 'react-router-dom';\nimport { Request, User } from '../types/Common';\n\n/** \n* Displays the user list page\n* @function RequestList\n* */\nconst RequestList = (props: { requests: Request[] }) => {\n\tconst { requests } = props;\n\treturn (\n\t\t<div className=\"mx-10 border-l-2 border-r-2 border-b-2 border-gray-800 shadow-sm\">\n\t\t\t<div className=\"bg-gray-800 flex flex-row justify-center w-full text-gray-300 p-2\">\n\t\t\t\t<p className=\"font-bold flex-1 text-center\">User</p>\n\t\t\t\t<p className=\"font-bold flex-1 text-center\">Created on</p>\n\t\t\t\t<p className=\"font-bold flex-1 text-center\">Start date</p>\n\t\t\t\t<p className=\"font-bold flex-1 text-center\">End date</p>\n\t\t\t\t<p className=\"font-bold flex-1 text-center\">Status</p>\n\t\t\t\t<p className=\"font-bold flex-1 text-center\">Actions</p>\n\t\t\t</div>\n\t\t\t{requests.map(request => (\n\t\t\t\t<RequestItem request={request} />\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\n/** \n* Displays a request list item\n* @function RequestItem\n* @param {Object} props - The props of the component\n* @param {Request} props.request - The request this item represents\n* @param {()=>void} props.update - Callback for updating the main list\n* @returns A single request item for the request list\n* */\nconst RequestItem = (props: { request: Request }) => {\n\tconst authContext = useContext(AuthContext);\n\tconst [request, setRequest] = useState(props.request);\n\n\t/* The state which determines whether the popup window to modify a user is\n\t* shown */\n\tconst [popupShown, setPopupShown] = useState(false);\n\n\tconst onIconClicked = async (value: boolean) => {\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tawait fetch(`${apiLink}/supervisor/${authContext.userId}/requests/${request.id}?approved=${value}`, {\n\t\t\tmethod: \"put\",\n\t\t\theaders: {\n\t\t\t\t\"Authorization\": bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\talert(res.message);\n\t\t\t\t\tsetRequest({ ...request, approved: value });\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Sorry something went wrong!\");\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}\n\tlet circleColor = \"bg-gray-400\";\n\tif (request.approved === true) {\n\t\tcircleColor = \"bg-green-700\";\n\t} else if (request.approved === false) {\n\t\tcircleColor = \"bg-red-700\";\n\t}\n\treturn (\n\t\t<div onClick={() => setPopupShown(true)}\n\t\t\tclassName=\"flex flex-row justify-center bg-gray-100 w-full p-5 border-b border-gray-400 text-gray-700\">\n\t\t\t<p className=\"flex-1 text-center\">{`${request.user.firstname} ${request.user.lastname}`}</p>\n\t\t\t<p className=\"flex-1 text-center\">{new Date(request.createdOn).toDateString()}</p>\n\t\t\t<p className=\"flex-1 text-center\">{new Date(request.startDate).toDateString()}</p>\n\t\t\t<p className=\"flex-1 text-center\">{new Date(request.endDate).toDateString()}</p>\n\t\t\t<div className=\"flex-1 flex justify-center items-center\">\n\t\t\t\t<div className={`w-6 h-6 rounded-full ${circleColor} mr-3`}></div>\n\t\t\t</div>\n\t\t\t<div className=\"flex-1 flex flex-row justify-around text-center\">\n\t\t\t\t<button className=\"focus:outline-none flex justify-center \n\t\t\t\t\titems-center bg-transparent text-green-700 hover:bg-gray-300 rounded-full p-1\">\n\t\t\t\t\t<i onClick={() => onIconClicked(true)} className=\"material-icons hover:text-green-700 hover:cursor-pointer\">done</i>\n\t\t\t\t</button>\n\t\t\t\t<button className=\"focus:outline-none flex justify-center \n\t\t\t\t\titems-center bg-transparent text-red-700 hover:bg-gray-300 rounded-full p-1\">\n\t\t\t\t\t<i onClick={() => onIconClicked(false)} className=\"material-icons hover:text-red-700 hover:cursor-pointer\">cancel</i>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n\n\nexport default RequestList;\n","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/user/Requests.tsx",["183","184","185","186","187","188","189"],"import { useContext, useEffect, useState } from 'react';\nimport { ContentPage, ContentPageContext, Popup, Label, Input, Select, ActionButton, Form, DangerButton } from '../styled/Components';\nimport { AuthContext } from '../App';\nimport { formatDate } from '../util/Utils';\nimport apiLink from '../API';\nimport { useRouteMatch, useParams } from 'react-router-dom';\nimport { Request, User } from '../types/Common';\nimport RequestList from './RequestList';\n\n/** \n* Displays the user list page\n* @function RequestList\n* */\nconst Requests = (props: any) => {\n\tconst { userId } = useParams() as any;\n\tconst authContext = useContext(AuthContext);\n\tconst { url } = useRouteMatch();\n\n\t/* The user object which will be used to set the user of a request, the \n\t* backend only needs the id to identify it */\n\tconst user = {\n\t\tid: userId\n\t};\n\n\t/* Set the location list in the header of the page */\n\tconst contentPageContext = useContext(ContentPageContext);\n\tuseEffect(() => {\n\t\tcontentPageContext.setLocationList([{ title: \"Requests\", url: url }]);\n\t}, []);\n\n\t/* Set up the state that holds the requests, and also a value for updating the\n\t* list with a callback*/\n\tconst [requests, setRequests] = useState<Request[]>([]);\n\tconst [update, setUpdate] = useState(0);\n\tconst updateRequestList = () => setUpdate(update + 1);\n\tuseEffect(() => {\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tfetch(`${apiLink}/user/${userId}/requests`, {\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tconst usrs = res.result as Request[];\n\t\t\t\t\tsetRequests(usrs.filter(usr => usr.id != authContext.userId));\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}, [userId, update]);\n\n\tconst [addRequest, setAddRequest] = useState(false);\n\n\treturn (\n\t\t<div className=\"flex flex-col\">\n\t\t\t<ActionButton onClick={() => setAddRequest(true)} background=\"green\" className=\"p-1 mx-10 my-5 w-14\">\n\t\t\t\t<i className=\"material-icons\">add</i>\n\t\t\t</ActionButton>\n\t\t\t<RequestList requests={requests} updateRequestList={updateRequestList} />\n\t\t\t{addRequest ? <AddRequest user={user as User} close={() => setAddRequest(false)} update={updateRequestList} /> : null}\n\t\t</div>\n\t);\n}\n\nconst AddRequest = (props: { user: User, close: () => void, update: () => void }) => {\n\t/* Get the authentication context and destructure elements */\n\tconst authContext = useContext(AuthContext);\n\tconst { user, close, update } = props;\n\n\t/* The state which will hold the information about the form */\n\tconst [form, setForm] = useState<Request>({\n\t\tid: 0,\n\t\tstartDate: \"\",\n\t\tendDate: \"\",\n\t\tcreatedOn: \"\",\n\t\tapproved: null,\n\t\tuser: user\n\t});\n\n\tconst onChange = (event: React.ChangeEvent) => {\n\t\tevent.preventDefault();\n\t\tconst { name, value } = event.target as any;\n\t\tsetForm({ ...form, [name]: value });\n\t}\n\n\tconst onSubmit = async (event: React.FormEvent) => {\n\t\tevent.preventDefault();\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tawait fetch(`${apiLink}/user/${authContext.userId}/requests`, {\n\t\t\tmethod: \"post\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"Authorization\": bearer\n\t\t\t},\n\t\t\tbody: JSON.stringify(form)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\talert(res.message);\n\t\t\t\t\tupdate();\n\t\t\t\t\tclose();\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}\n\n\n\treturn (\n\t\t<Popup>\n\t\t\t<div className=\"flex flex-col items-stretch w-1/2 min-w-min min-h-screen m-auto bg-gray-200 p-5 text-gray-800\">\n\n\t\t\t\t<div className=\"flex flex-row justify-center\">\n\t\t\t\t\t<p className=\"font-bold flex-1 text-lg text-center\">Add Request</p>\n\t\t\t\t\t<i onClick={props.close} className=\"material-icons cursor-pointer text-gray-600 hover:text-gray-800\">close</i>\n\t\t\t\t</div>\n\n\t\t\t\t<Form onSubmit={onSubmit}>\n\t\t\t\t\t<Label>\n\t\t\t\t\t\t<p>Start date</p>\n\t\t\t\t\t\t<Input type=\"date\" name=\"startDate\" onChange={onChange} value={form.startDate}></Input>\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Label>\n\t\t\t\t\t\t<p>End date</p>\n\t\t\t\t\t\t<Input type=\"date\" name=\"endDate\" onChange={onChange} value={form.endDate}></Input>\n\t\t\t\t\t</Label>\n\t\t\t\t\t<ActionButton className=\"p-3 mt-3 w-40\">Add</ActionButton>\n\t\t\t\t</Form>\n\n\t\t\t</div>\n\t\t</Popup>\n\t);\n}\n\nexport default Requests;\n","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/user/RequestList.tsx",["190","191","192","193","194","195","196","197","198","199","200","201","202","203","204"],"import { useContext, useEffect, useState } from 'react';\nimport { ContentPage, ContentPageContext, Popup, Label, Input, Select, ActionButton, Form, DangerButton } from '../styled/Components';\nimport { AuthContext } from '../App';\nimport { formatDate } from '../util/Utils';\nimport apiLink from '../API';\nimport { useRouteMatch, useParams } from 'react-router-dom';\nimport { Request, User } from '../types/Common';\n\n/** \n* Displays the user list page\n* @function RequestList\n* */\nconst RequestList = (props: { requests: Request[], updateRequestList: () => void }) => {\n\tconst { requests } = props;\n\treturn (\n\t\t<div className=\"mx-10 border-l-2 border-r-2 border-b-2 border-gray-800 shadow-sm\">\n\t\t\t<div className=\"bg-gray-800 flex flex-row justify-center w-full text-gray-300 p-2\">\n\t\t\t\t<p className=\"font-bold flex-1 text-center\">User</p>\n\t\t\t\t<p className=\"font-bold flex-1 text-center\">Created on</p>\n\t\t\t\t<p className=\"font-bold flex-1 text-center\">Start date</p>\n\t\t\t\t<p className=\"font-bold flex-1 text-center\">End date</p>\n\t\t\t\t<p className=\"font-bold flex-1 text-center\">Status</p>\n\t\t\t\t<p className=\"font-bold flex-1 text-center\">Actions</p>\n\t\t\t</div>\n\t\t\t{requests.map(request => (\n\t\t\t\t<RequestItem request={request} updateRequestList={props.updateRequestList} />\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\n/** \n* Displays a request list item\n* @function RequestItem\n* @param {Object} props - The props of the component\n* @param {Request} props.request - The request this item represents\n* @param {()=>void} props.update - Callback for updating the main list\n* @returns A single request item for the request list\n* */\nconst RequestItem = (props: { request: Request, updateRequestList: () => void }) => {\n\tconst authContext = useContext(AuthContext);\n\tconst {request, updateRequestList} = props;\n\n\tlet circleColor = \"bg-gray-400\";\n\tif (request.approved === true) {\n\t\tcircleColor = \"bg-green-700\";\n\t} else if (request.approved === false) {\n\t\tcircleColor = \"bg-red-700\";\n\t}\n\n\tconst deleteRequest = () => {\n\t\tfetch(`${apiLink}/user/${authContext.userId}/requests/${request.id}`, {\n\t\t\tmethod: 'delete',\n\t\t\theaders: {\n\t\t\t\t'Authorization': `Bearer ${authContext.jwtToken}`\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif(res.status === \"OK\") {\n\t\t\t\t\talert(res.message);\n\t\t\t\t\tupdateRequestList();\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Sorry something went wrong!\");\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}\n\treturn (\n\t\t<div className=\"flex flex-row justify-center bg-gray-100 w-full p-5 border-b border-gray-400 text-gray-700\">\n\t\t\t<p className=\"flex-1 text-center\">{`${request.user.firstname} ${request.user.lastname}`}</p>\n\t\t\t<p className=\"flex-1 text-center\">{new Date(request.createdOn).toDateString()}</p>\n\t\t\t<p className=\"flex-1 text-center\">{new Date(request.startDate).toDateString()}</p>\n\t\t\t<p className=\"flex-1 text-center\">{new Date(request.endDate).toDateString()}</p>\n\t\t\t<div className=\"flex-1 flex justify-center items-center\">\n\t\t\t\t<div className={`w-6 h-6 rounded-full ${circleColor} mr-3`}></div>\n\t\t\t</div>\n\t\t\t<div className=\"flex-1 flex justify-center items-center\">\n\t\t\t\t<i onClick={deleteRequest}\n\t\t\t\t\tclassName=\"material-icons hover:bg-gray-200 \n\t\t\t\t\thover:text-red-700 rounded-full p-2 cursor-pointer\">delete</i>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n\n\nexport default RequestList;\n","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/user/Settings.tsx",["205","206","207","208","209","210","211"],"import { useContext, useEffect, useState } from 'react';\nimport { ContentPage, ContentPageContext, Popup, Label, Input, Select, ActionButton, Form, DangerButton } from '../styled/Components';\nimport { AuthContext } from '../App';\nimport { formatDate } from '../util/Utils';\nimport apiLink from '../API';\nimport { useRouteMatch, useParams, useHistory } from 'react-router-dom';\nimport { User } from '../types/Common';\n\n/** \n* Displays the settings page\n* @function Settings\n* */\nconst Settings = (props: any) => {\n\t/* Get the authentication context and destructure elements */\n\tconst authContext = useContext(AuthContext);\n\tconst contentPageContext = useContext(ContentPageContext);\n\tconst { url } = useRouteMatch();\n\tuseEffect(() => {\n\t\tcontentPageContext.setLocationList([{ title: \"Settings\", url: url }]);\n\t}, [authContext.userId]);\n\treturn (\n\t\t<ContentPage className=\"p-10\">\n\t\t\t<div className=\"p-10\">\n\t\t\t\t<PersonalInfo />\n\t\t\t\t<PasswordForm />\n\t\t\t</div>\n\t\t</ContentPage>\n\t);\n}\n\n/** \n* Displays and is able to modify personal infor \n* @function PersonalInfo\n* @returns The personal info view\n* */\nconst PersonalInfo = () => {\n\t/* Get the authentication context and destructure elements */\n\tconst authContext = useContext(AuthContext);\n\tconst history = useHistory();\n\n\t/* The state which will hold the form infomation */\n\tconst [form, setForm] = useState<User>({\n\t\tid: 0,\n\t\tfirstname: \"\",\n\t\tlastname: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t\ttype: \"admin\",\n\t\tstartDate: new Date(Date.now()).toString(),\n\t\tsupervisor: null\n\t});\n\tuseEffect(() => {\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tfetch(`${apiLink}/user/${authContext.userId}`, {\n\t\t\theaders: {\n\t\t\t\t\"Authorization\": bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tsetForm(res.result);\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}, [authContext.userId]);\n\n\tconst onChange = (event: React.ChangeEvent) => {\n\t\tevent.preventDefault();\n\t\tconst { name, value } = event.target as any;\n\t\tsetForm({ ...form, [name]: value });\n\t}\n\n\tconst onSubmit = async (event: React.FormEvent) => {\n\t\tevent.preventDefault();\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tawait fetch(`${apiLink}/user/${authContext.userId}`, {\n\t\t\tmethod: \"put\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"Authorization\": bearer\n\t\t\t},\n\t\t\tbody: JSON.stringify(form)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\talert(res.message + \". Please relogin to confirm information!\");\n\t\t\t\t\tauthContext.signOut();\n\t\t\t\t\thistory.push(\"/\");\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}\n\n\treturn (\n\t\t<div className=\"flex flex-col items-stretch min-w-min bg-gray-100 p-10 text-gray-800 rounded-xl shadow-xl\">\n\n\t\t\t<div className=\"flex flex-row justify-center\">\n\t\t\t\t<p className=\"font-bold flex-1 text-lg text-center\">Update personal info</p>\n\t\t\t</div>\n\n\t\t\t<Form onSubmit={onSubmit}>\n\t\t\t\t<Label>\n\t\t\t\t\t<p>Email</p>\n\t\t\t\t\t<Input type=\"text\" name=\"email\" onChange={onChange} value={form.email}></Input>\n\t\t\t\t</Label>\n\t\t\t\t<Label>\n\t\t\t\t\t<p>Firstname</p>\n\t\t\t\t\t<Input type=\"text\" name=\"firstname\" onChange={onChange} value={form.firstname}></Input>\n\t\t\t\t</Label>\n\t\t\t\t<Label>\n\t\t\t\t\t<p>Lastname</p>\n\t\t\t\t\t<Input type=\"text\" name=\"lastname\" onChange={onChange} value={form.lastname}></Input>\n\t\t\t\t</Label>\n\t\t\t\t<ActionButton className=\"p-3 mt-3 w-40\">Update</ActionButton>\n\t\t\t</Form>\n\n\t\t</div>\n\t);\n}\n\n/** \n* Displays the form that modifies the user password\n* @function PasswordForm\n* @returns Change password view \n* */\nconst PasswordForm = () => {\n\tconst authContext = useContext(AuthContext);\n\tconst history = useHistory();\n\tconst [passwordForm , setPasswordForm] = useState({\n\t\toldPassword: \"\",\n\t\tnewPassword: \"\",\n\t\tconfirmPassword: \"\"\n\t});\n\n\tconst onChange = (event: React.ChangeEvent) => {\n\t\tevent.preventDefault();\n\t\tconst { name, value } = event.target as any;\n\t\tsetPasswordForm({ ...passwordForm, [name]: value });\n\t}\n\n\n\tconst onSubmit = async (event: React.FormEvent) => {\n\t\tevent.preventDefault();\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tawait fetch(`${apiLink}/user/${authContext.userId}/changepassword`, {\n\t\t\tmethod: \"put\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"Authorization\": bearer\n\t\t\t},\n\t\t\tbody: JSON.stringify(passwordForm)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\talert(res.message + \". Please relogin to confirm information!\");\n\t\t\t\t\tauthContext.signOut();\n\t\t\t\t\thistory.push(\"/\");\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}\n\n\n\treturn (\n\t\t<div className=\"mt-16 flex flex-col items-stretch min-w-min bg-gray-100 p-10 text-gray-800 rounded-xl shadow-xl\">\n\n\t\t\t<div className=\"flex flex-row justify-center\">\n\t\t\t\t<p className=\"font-bold flex-1 text-lg text-center\">Change Password</p>\n\t\t\t</div>\n\n\t\t\t<Form onSubmit={onSubmit}>\n\t\t\t\t<Label>\n\t\t\t\t\t<p>Old password</p>\n\t\t\t\t\t<Input type=\"password\" name=\"oldPassword\" onChange={onChange} value={passwordForm.oldPassword}></Input>\n\t\t\t\t</Label>\n\t\t\t\t<Label>\n\t\t\t\t\t<p>New password</p>\n\t\t\t\t\t<Input type=\"password\" name=\"newPassword\" onChange={onChange} value={passwordForm.newPassword}></Input>\n\t\t\t\t</Label>\n\t\t\t\t<Label>\n\t\t\t\t\t<p>Confirm password</p>\n\t\t\t\t\t<Input type=\"password\" name=\"confirmPassword\" onChange={onChange} value={passwordForm.confirmPassword}></Input>\n\t\t\t\t</Label>\n\t\t\t\t<ActionButton className=\"p-3 mt-3 w-40\">Update</ActionButton>\n\t\t\t</Form>\n\n\t\t</div>\n\t);\n}\n\n\n\n\nexport default Settings;\n","/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/shared/ResetPassword.tsx",[],{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":34,"column":8,"nodeType":"218","messageId":"219","endLine":34,"endColumn":19},{"ruleId":"220","severity":1,"message":"221","line":41,"column":5,"nodeType":"222","endLine":41,"endColumn":7,"suggestions":"223"},{"ruleId":"216","severity":1,"message":"224","line":43,"column":19,"nodeType":"218","messageId":"219","endLine":43,"endColumn":30},{"ruleId":"220","severity":1,"message":"221","line":30,"column":5,"nodeType":"222","endLine":30,"endColumn":7,"suggestions":"225"},{"ruleId":"216","severity":1,"message":"226","line":91,"column":17,"nodeType":"218","messageId":"219","endLine":91,"endColumn":26},{"ruleId":"216","severity":1,"message":"226","line":104,"column":17,"nodeType":"218","messageId":"219","endLine":104,"endColumn":26},{"ruleId":"216","severity":1,"message":"226","line":117,"column":17,"nodeType":"218","messageId":"219","endLine":117,"endColumn":26},{"ruleId":"216","severity":1,"message":"226","line":130,"column":17,"nodeType":"218","messageId":"219","endLine":130,"endColumn":26},{"ruleId":"216","severity":1,"message":"217","line":255,"column":8,"nodeType":"218","messageId":"219","endLine":255,"endColumn":19},{"ruleId":"216","severity":1,"message":"217","line":299,"column":8,"nodeType":"218","messageId":"219","endLine":299,"endColumn":19},{"ruleId":"216","severity":1,"message":"227","line":381,"column":10,"nodeType":"218","messageId":"219","endLine":381,"endColumn":16},{"ruleId":"216","severity":1,"message":"228","line":381,"column":18,"nodeType":"218","messageId":"219","endLine":381,"endColumn":26},{"ruleId":"216","severity":1,"message":"229","line":382,"column":10,"nodeType":"218","messageId":"219","endLine":382,"endColumn":15},{"ruleId":"216","severity":1,"message":"230","line":384,"column":19,"nodeType":"218","messageId":"219","endLine":384,"endColumn":30},{"ruleId":"216","severity":1,"message":"231","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":21},{"ruleId":"216","severity":1,"message":"232","line":4,"column":10,"nodeType":"218","messageId":"219","endLine":4,"endColumn":20},{"ruleId":"220","severity":1,"message":"221","line":22,"column":5,"nodeType":"222","endLine":22,"endColumn":7,"suggestions":"233"},{"ruleId":"234","severity":1,"message":"235","line":39,"column":41,"nodeType":"236","messageId":"237","endLine":39,"endColumn":43},{"ruleId":"220","severity":1,"message":"238","line":44,"column":5,"nodeType":"222","endLine":44,"endColumn":27,"suggestions":"239"},{"ruleId":"216","severity":1,"message":"240","line":158,"column":11,"nodeType":"218","messageId":"219","endLine":158,"endColumn":15},{"ruleId":"234","severity":1,"message":"241","line":159,"column":13,"nodeType":"236","messageId":"237","endLine":159,"endColumn":15},{"ruleId":"234","severity":1,"message":"241","line":165,"column":26,"nodeType":"236","messageId":"237","endLine":165,"endColumn":28},{"ruleId":"216","severity":1,"message":"240","line":324,"column":11,"nodeType":"218","messageId":"219","endLine":324,"endColumn":15},{"ruleId":"234","severity":1,"message":"241","line":325,"column":13,"nodeType":"236","messageId":"237","endLine":325,"endColumn":15},{"ruleId":"234","severity":1,"message":"241","line":331,"column":26,"nodeType":"236","messageId":"237","endLine":331,"endColumn":28},{"ruleId":"216","severity":1,"message":"242","line":2,"column":43,"nodeType":"218","messageId":"219","endLine":2,"endColumn":48},{"ruleId":"216","severity":1,"message":"243","line":2,"column":64,"nodeType":"218","messageId":"219","endLine":2,"endColumn":70},{"ruleId":"216","severity":1,"message":"244","line":2,"column":92,"nodeType":"218","messageId":"219","endLine":2,"endColumn":104},{"ruleId":"216","severity":1,"message":"232","line":4,"column":10,"nodeType":"218","messageId":"219","endLine":4,"endColumn":20},{"ruleId":"216","severity":1,"message":"245","line":6,"column":25,"nodeType":"218","messageId":"219","endLine":6,"endColumn":34},{"ruleId":"220","severity":1,"message":"221","line":20,"column":5,"nodeType":"222","endLine":20,"endColumn":25,"suggestions":"246"},{"ruleId":"220","severity":1,"message":"247","line":68,"column":5,"nodeType":"222","endLine":68,"endColumn":25,"suggestions":"248"},{"ruleId":"216","severity":1,"message":"242","line":2,"column":43,"nodeType":"218","messageId":"219","endLine":2,"endColumn":48},{"ruleId":"216","severity":1,"message":"243","line":2,"column":64,"nodeType":"218","messageId":"219","endLine":2,"endColumn":70},{"ruleId":"216","severity":1,"message":"244","line":2,"column":92,"nodeType":"218","messageId":"219","endLine":2,"endColumn":104},{"ruleId":"216","severity":1,"message":"232","line":4,"column":10,"nodeType":"218","messageId":"219","endLine":4,"endColumn":20},{"ruleId":"216","severity":1,"message":"245","line":6,"column":25,"nodeType":"218","messageId":"219","endLine":6,"endColumn":34},{"ruleId":"220","severity":1,"message":"221","line":20,"column":5,"nodeType":"222","endLine":20,"endColumn":25,"suggestions":"249"},{"ruleId":"220","severity":1,"message":"247","line":67,"column":5,"nodeType":"222","endLine":67,"endColumn":25,"suggestions":"250"},{"ruleId":"216","severity":1,"message":"231","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":21},{"ruleId":"216","severity":1,"message":"242","line":2,"column":43,"nodeType":"218","messageId":"219","endLine":2,"endColumn":48},{"ruleId":"216","severity":1,"message":"251","line":2,"column":50,"nodeType":"218","messageId":"219","endLine":2,"endColumn":55},{"ruleId":"216","severity":1,"message":"252","line":2,"column":57,"nodeType":"218","messageId":"219","endLine":2,"endColumn":62},{"ruleId":"216","severity":1,"message":"243","line":2,"column":64,"nodeType":"218","messageId":"219","endLine":2,"endColumn":70},{"ruleId":"216","severity":1,"message":"253","line":2,"column":86,"nodeType":"218","messageId":"219","endLine":2,"endColumn":90},{"ruleId":"216","severity":1,"message":"244","line":2,"column":92,"nodeType":"218","messageId":"219","endLine":2,"endColumn":104},{"ruleId":"216","severity":1,"message":"254","line":5,"column":25,"nodeType":"218","messageId":"219","endLine":5,"endColumn":29},{"ruleId":"216","severity":1,"message":"255","line":12,"column":10,"nodeType":"218","messageId":"219","endLine":12,"endColumn":13},{"ruleId":"220","severity":1,"message":"221","line":41,"column":5,"nodeType":"222","endLine":41,"endColumn":7,"suggestions":"256"},{"ruleId":"234","severity":1,"message":"235","line":57,"column":41,"nodeType":"236","messageId":"237","endLine":57,"endColumn":43},{"ruleId":"220","severity":1,"message":"238","line":62,"column":5,"nodeType":"222","endLine":62,"endColumn":13,"suggestions":"257"},{"ruleId":"220","severity":1,"message":"258","line":127,"column":5,"nodeType":"222","endLine":127,"endColumn":7,"suggestions":"259"},{"ruleId":"220","severity":1,"message":"247","line":147,"column":5,"nodeType":"222","endLine":147,"endColumn":34,"suggestions":"260"},{"ruleId":"216","severity":1,"message":"231","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":21},{"ruleId":"216","severity":1,"message":"242","line":2,"column":43,"nodeType":"218","messageId":"219","endLine":2,"endColumn":48},{"ruleId":"216","severity":1,"message":"251","line":2,"column":50,"nodeType":"218","messageId":"219","endLine":2,"endColumn":55},{"ruleId":"216","severity":1,"message":"252","line":2,"column":57,"nodeType":"218","messageId":"219","endLine":2,"endColumn":62},{"ruleId":"216","severity":1,"message":"243","line":2,"column":64,"nodeType":"218","messageId":"219","endLine":2,"endColumn":70},{"ruleId":"216","severity":1,"message":"261","line":2,"column":72,"nodeType":"218","messageId":"219","endLine":2,"endColumn":84},{"ruleId":"216","severity":1,"message":"253","line":2,"column":86,"nodeType":"218","messageId":"219","endLine":2,"endColumn":90},{"ruleId":"216","severity":1,"message":"244","line":2,"column":92,"nodeType":"218","messageId":"219","endLine":2,"endColumn":104},{"ruleId":"216","severity":1,"message":"232","line":4,"column":10,"nodeType":"218","messageId":"219","endLine":4,"endColumn":20},{"ruleId":"216","severity":1,"message":"262","line":7,"column":19,"nodeType":"218","messageId":"219","endLine":7,"endColumn":23},{"ruleId":"220","severity":1,"message":"221","line":23,"column":5,"nodeType":"222","endLine":23,"endColumn":7,"suggestions":"263"},{"ruleId":"234","severity":1,"message":"235","line":39,"column":44,"nodeType":"236","messageId":"237","endLine":39,"endColumn":46},{"ruleId":"220","severity":1,"message":"238","line":44,"column":5,"nodeType":"222","endLine":44,"endColumn":13,"suggestions":"264"},{"ruleId":"216","severity":1,"message":"265","line":1,"column":22,"nodeType":"218","messageId":"219","endLine":1,"endColumn":31},{"ruleId":"216","severity":1,"message":"231","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":21},{"ruleId":"216","severity":1,"message":"266","line":2,"column":23,"nodeType":"218","messageId":"219","endLine":2,"endColumn":41},{"ruleId":"216","severity":1,"message":"242","line":2,"column":43,"nodeType":"218","messageId":"219","endLine":2,"endColumn":48},{"ruleId":"216","severity":1,"message":"251","line":2,"column":50,"nodeType":"218","messageId":"219","endLine":2,"endColumn":55},{"ruleId":"216","severity":1,"message":"252","line":2,"column":57,"nodeType":"218","messageId":"219","endLine":2,"endColumn":62},{"ruleId":"216","severity":1,"message":"243","line":2,"column":64,"nodeType":"218","messageId":"219","endLine":2,"endColumn":70},{"ruleId":"216","severity":1,"message":"261","line":2,"column":72,"nodeType":"218","messageId":"219","endLine":2,"endColumn":84},{"ruleId":"216","severity":1,"message":"253","line":2,"column":86,"nodeType":"218","messageId":"219","endLine":2,"endColumn":90},{"ruleId":"216","severity":1,"message":"244","line":2,"column":92,"nodeType":"218","messageId":"219","endLine":2,"endColumn":104},{"ruleId":"216","severity":1,"message":"232","line":4,"column":10,"nodeType":"218","messageId":"219","endLine":4,"endColumn":20},{"ruleId":"216","severity":1,"message":"267","line":6,"column":10,"nodeType":"218","messageId":"219","endLine":6,"endColumn":23},{"ruleId":"216","severity":1,"message":"245","line":6,"column":25,"nodeType":"218","messageId":"219","endLine":6,"endColumn":34},{"ruleId":"216","severity":1,"message":"262","line":7,"column":19,"nodeType":"218","messageId":"219","endLine":7,"endColumn":23},{"ruleId":"216","severity":1,"message":"268","line":46,"column":9,"nodeType":"218","messageId":"219","endLine":46,"endColumn":19},{"ruleId":"216","severity":1,"message":"231","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":21},{"ruleId":"216","severity":1,"message":"243","line":2,"column":64,"nodeType":"218","messageId":"219","endLine":2,"endColumn":70},{"ruleId":"216","severity":1,"message":"244","line":2,"column":92,"nodeType":"218","messageId":"219","endLine":2,"endColumn":104},{"ruleId":"216","severity":1,"message":"232","line":4,"column":10,"nodeType":"218","messageId":"219","endLine":4,"endColumn":20},{"ruleId":"220","severity":1,"message":"221","line":29,"column":5,"nodeType":"222","endLine":29,"endColumn":7,"suggestions":"269"},{"ruleId":"234","severity":1,"message":"235","line":47,"column":44,"nodeType":"236","messageId":"237","endLine":47,"endColumn":46},{"ruleId":"220","severity":1,"message":"238","line":52,"column":5,"nodeType":"222","endLine":52,"endColumn":21,"suggestions":"270"},{"ruleId":"216","severity":1,"message":"265","line":1,"column":22,"nodeType":"218","messageId":"219","endLine":1,"endColumn":31},{"ruleId":"216","severity":1,"message":"271","line":1,"column":33,"nodeType":"218","messageId":"219","endLine":1,"endColumn":41},{"ruleId":"216","severity":1,"message":"231","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":21},{"ruleId":"216","severity":1,"message":"266","line":2,"column":23,"nodeType":"218","messageId":"219","endLine":2,"endColumn":41},{"ruleId":"216","severity":1,"message":"242","line":2,"column":43,"nodeType":"218","messageId":"219","endLine":2,"endColumn":48},{"ruleId":"216","severity":1,"message":"251","line":2,"column":50,"nodeType":"218","messageId":"219","endLine":2,"endColumn":55},{"ruleId":"216","severity":1,"message":"252","line":2,"column":57,"nodeType":"218","messageId":"219","endLine":2,"endColumn":62},{"ruleId":"216","severity":1,"message":"243","line":2,"column":64,"nodeType":"218","messageId":"219","endLine":2,"endColumn":70},{"ruleId":"216","severity":1,"message":"261","line":2,"column":72,"nodeType":"218","messageId":"219","endLine":2,"endColumn":84},{"ruleId":"216","severity":1,"message":"253","line":2,"column":86,"nodeType":"218","messageId":"219","endLine":2,"endColumn":90},{"ruleId":"216","severity":1,"message":"244","line":2,"column":92,"nodeType":"218","messageId":"219","endLine":2,"endColumn":104},{"ruleId":"216","severity":1,"message":"232","line":4,"column":10,"nodeType":"218","messageId":"219","endLine":4,"endColumn":20},{"ruleId":"216","severity":1,"message":"267","line":6,"column":10,"nodeType":"218","messageId":"219","endLine":6,"endColumn":23},{"ruleId":"216","severity":1,"message":"245","line":6,"column":25,"nodeType":"218","messageId":"219","endLine":6,"endColumn":34},{"ruleId":"216","severity":1,"message":"262","line":7,"column":19,"nodeType":"218","messageId":"219","endLine":7,"endColumn":23},{"ruleId":"216","severity":1,"message":"242","line":2,"column":43,"nodeType":"218","messageId":"219","endLine":2,"endColumn":48},{"ruleId":"216","severity":1,"message":"243","line":2,"column":64,"nodeType":"218","messageId":"219","endLine":2,"endColumn":70},{"ruleId":"216","severity":1,"message":"244","line":2,"column":92,"nodeType":"218","messageId":"219","endLine":2,"endColumn":104},{"ruleId":"216","severity":1,"message":"232","line":4,"column":10,"nodeType":"218","messageId":"219","endLine":4,"endColumn":20},{"ruleId":"216","severity":1,"message":"245","line":6,"column":25,"nodeType":"218","messageId":"219","endLine":6,"endColumn":34},{"ruleId":"220","severity":1,"message":"221","line":20,"column":5,"nodeType":"222","endLine":20,"endColumn":25,"suggestions":"272"},{"ruleId":"220","severity":1,"message":"247","line":67,"column":5,"nodeType":"222","endLine":67,"endColumn":25,"suggestions":"273"},"no-native-reassign",["274"],"no-negated-in-lhs",["275"],"@typescript-eslint/no-unused-vars","'authContext' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'contentPageContext' and 'url'. Either include them or remove the dependency array.","ArrayExpression",["276"],"'setProjects' is assigned a value but never used.",["277"],"'setIssues' is assigned a value but never used.","'userId' is assigned a value but never used.","'jwtToken' is assigned a value but never used.","'issue' is assigned a value but never used.","'setComments' is assigned a value but never used.","'ContentPage' is defined but never used.","'formatDate' is defined but never used.",["278"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'authContext.jwtToken' and 'authContext.userId'. Either include them or remove the dependency array.",["279"],"'name' is assigned a value but never used.","Expected '===' and instead saw '=='.","'Popup' is defined but never used.","'Select' is defined but never used.","'DangerButton' is defined but never used.","'useParams' is defined but never used.",["280"],"React Hook useEffect has a missing dependency: 'authContext.jwtToken'. Either include it or remove the dependency array.",["281"],["282"],["283"],"'Label' is defined but never used.","'Input' is defined but never used.","'Form' is defined but never used.","'Link' is defined but never used.","'url' is assigned a value but never used.",["284"],["285"],"React Hook useEffect has missing dependencies: 'contentPageContext', 'url', and 'user'. Either include them or remove the dependency array.",["286"],["287"],"'ActionButton' is defined but never used.","'User' is defined but never used.",["288"],["289"],"'useEffect' is defined but never used.","'ContentPageContext' is defined but never used.","'useRouteMatch' is defined but never used.","'popupShown' is assigned a value but never used.",["290"],["291"],"'useState' is defined but never used.",["292"],["293"],"no-global-assign","no-unsafe-negation",{"desc":"294","fix":"295"},{"desc":"294","fix":"296"},{"desc":"294","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"300","fix":"304"},{"desc":"302","fix":"305"},{"desc":"294","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"294","fix":"313"},{"desc":"307","fix":"314"},{"desc":"294","fix":"315"},{"desc":"316","fix":"317"},{"desc":"300","fix":"318"},{"desc":"302","fix":"319"},"Update the dependencies array to be: [contentPageContext, url]",{"range":"320","text":"321"},{"range":"322","text":"321"},{"range":"323","text":"321"},"Update the dependencies array to be: [userId, shouldUpdate, authContext.jwtToken, authContext.userId]",{"range":"324","text":"325"},"Update the dependencies array to be: [authContext.userId, contentPageContext, url]",{"range":"326","text":"327"},"Update the dependencies array to be: [authContext.jwtToken, authContext.userId]",{"range":"328","text":"329"},{"range":"330","text":"327"},{"range":"331","text":"329"},{"range":"332","text":"321"},"Update the dependencies array to be: [authContext.jwtToken, authContext.userId, userId]",{"range":"333","text":"334"},"Update the dependencies array to be: [contentPageContext, url, user]",{"range":"335","text":"336"},"Update the dependencies array to be: [authContext.jwtToken, authContext.userId, user.id]",{"range":"337","text":"338"},{"range":"339","text":"321"},{"range":"340","text":"334"},{"range":"341","text":"321"},"Update the dependencies array to be: [userId, update, authContext.jwtToken, authContext.userId]",{"range":"342","text":"343"},{"range":"344","text":"327"},{"range":"345","text":"329"},[1082,1084],"[contentPageContext, url]",[1121,1123],[835,837],[1483,1505],"[userId, shouldUpdate, authContext.jwtToken, authContext.userId]",[824,844],"[authContext.userId, contentPageContext, url]",[1880,1900],"[authContext.jwtToken, authContext.userId]",[824,844],[1901,1921],[1164,1166],[1763,1771],"[authContext.jwtToken, authContext.userId, userId]",[4165,4167],"[contentPageContext, url, user]",[4733,4762],"[authContext.jwtToken, authContext.userId, user.id]",[891,893],[1511,1519],[1042,1044],[1754,1770],"[userId, update, authContext.jwtToken, authContext.userId]",[812,832],[1883,1903]]