{"ast":null,"code":"var _jsxFileName = \"/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/user/Requests.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { ContentPageContext, ActionButton } from '../styled/Components';\nimport { AuthContext } from '../App';\nimport apiLink from '../API';\nimport { useRouteMatch, useParams } from 'react-router-dom';\nimport RequestList from './RequestList';\n/** \n* Displays the user list page\n* @function RequestList\n* */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Requests = props => {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const authContext = useContext(AuthContext);\n  const {\n    url\n  } = useRouteMatch();\n  /* Set the location list in the header of the page */\n\n  const contentPageContext = useContext(ContentPageContext);\n  useEffect(() => {\n    contentPageContext.setLocationList([{\n      title: \"Requests\",\n      url: url\n    }]);\n  }, []);\n  /* Set up the state that holds the requests, and also a value for updating the\n  * list with a callback*/\n\n  const [requests, setRequests] = useState([]);\n  useEffect(() => {\n    const bearer = \"Bearer \" + authContext.jwtToken;\n    fetch(`${apiLink}/user/${userId}/requests`, {\n      headers: {\n        'Authorization': bearer\n      }\n    }).then(res => res.json()).then(res => {\n      if (res.status === \"OK\") {\n        const usrs = res.result;\n        setRequests(usrs.filter(usr => usr.id != authContext.userId));\n      } else {\n        alert(res.message);\n      }\n    }).catch(err => console.log(err));\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(ActionButton, {\n      background: \"green\",\n      className: \"p-1 mx-10 my-5 w-14\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"material-icons\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(RequestList, {\n      requests: requests\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Requests, \"nSE6mfynYVp8gUNeGVuMPotLDR8=\", false, function () {\n  return [useParams, useRouteMatch];\n});\n\n_c = Requests;\nexport default Requests;\n\nvar _c;\n\n$RefreshReg$(_c, \"Requests\");","map":{"version":3,"sources":["/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/user/Requests.tsx"],"names":["useContext","useEffect","useState","ContentPageContext","ActionButton","AuthContext","apiLink","useRouteMatch","useParams","RequestList","Requests","props","userId","authContext","url","contentPageContext","setLocationList","title","requests","setRequests","bearer","jwtToken","fetch","headers","then","res","json","status","usrs","result","filter","usr","id","alert","message","catch","err","console","log"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAAsBC,kBAAtB,EAAuEC,YAAvE,QAA+G,sBAA/G;AACA,SAASC,WAAT,QAA4B,QAA5B;AAEA,OAAOC,OAAP,MAAoB,QAApB;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,kBAAzC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA;AACA;AACA;AACA;;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAgB;AAAA;;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAaJ,SAAS,EAA5B;AACA,QAAMK,WAAW,GAAGb,UAAU,CAACK,WAAD,CAA9B;AACA,QAAM;AAAES,IAAAA;AAAF,MAAUP,aAAa,EAA7B;AAEA;;AACA,QAAMQ,kBAAkB,GAAGf,UAAU,CAACG,kBAAD,CAArC;AACAF,EAAAA,SAAS,CAAC,MAAM;AACfc,IAAAA,kBAAkB,CAACC,eAAnB,CAAmC,CAAC;AAAEC,MAAAA,KAAK,EAAE,UAAT;AAAqBH,MAAAA,GAAG,EAAEA;AAA1B,KAAD,CAAnC;AACA,GAFQ,EAEN,EAFM,CAAT;AAIA;AACD;;AACC,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAY,EAAZ,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMmB,MAAM,GAAG,YAAYP,WAAW,CAACQ,QAAvC;AACAC,IAAAA,KAAK,CAAE,GAAEhB,OAAQ,SAAQM,MAAO,WAA3B,EAAuC;AAC3CW,MAAAA,OAAO,EAAE;AACR,yBAAiBH;AADT;AADkC,KAAvC,CAAL,CAKEI,IALF,CAKOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALd,EAMEF,IANF,CAMOC,GAAG,IAAI;AACZ,UAAIA,GAAG,CAACE,MAAJ,KAAe,IAAnB,EAAyB;AACxB,cAAMC,IAAI,GAAGH,GAAG,CAACI,MAAjB;AACAV,QAAAA,WAAW,CAACS,IAAI,CAACE,MAAL,CAAYC,GAAG,IAAIA,GAAG,CAACC,EAAJ,IAAUnB,WAAW,CAACD,MAAzC,CAAD,CAAX;AACA,OAHD,MAGO;AACNqB,QAAAA,KAAK,CAACR,GAAG,CAACS,OAAL,CAAL;AACA;AACD,KAbF,EAaIC,KAbJ,CAaUC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAbjB;AAcA,GAhBQ,EAgBN,CAACxB,MAAD,CAhBM,CAAT;AAkBA,sBACC;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACC,QAAC,YAAD;AAAc,MAAA,UAAU,EAAC,OAAzB;AAAiC,MAAA,SAAS,EAAC,qBAA3C;AAAA,8BACC;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAKC,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEM;AAAvB;AAAA;AAAA;AAAA;AAAA,YALD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASA,CAzCD;;GAAMR,Q;UACcF,S,EAEHD,a;;;KAHXG,Q;AA2CN,eAAeA,QAAf","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { ContentPage, ContentPageContext, Popup, Label, Input, Select, ActionButton, Form, DangerButton } from '../styled/Components';\nimport { AuthContext } from '../App';\nimport { formatDate } from '../util/Utils';\nimport apiLink from '../API';\nimport { useRouteMatch, useParams } from 'react-router-dom';\nimport { Request, User } from '../types/Common';\nimport RequestList from './RequestList';\n\n/** \n* Displays the user list page\n* @function RequestList\n* */\nconst Requests = (props: any) => {\n\tconst { userId } = useParams() as any;\n\tconst authContext = useContext(AuthContext);\n\tconst { url } = useRouteMatch();\n\n\t/* Set the location list in the header of the page */\n\tconst contentPageContext = useContext(ContentPageContext);\n\tuseEffect(() => {\n\t\tcontentPageContext.setLocationList([{ title: \"Requests\", url: url }]);\n\t}, []);\n\n\t/* Set up the state that holds the requests, and also a value for updating the\n\t* list with a callback*/\n\tconst [requests, setRequests] = useState<Request[]>([]);\n\tuseEffect(() => {\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tfetch(`${apiLink}/user/${userId}/requests`, {\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tconst usrs = res.result as Request[];\n\t\t\t\t\tsetRequests(usrs.filter(usr => usr.id != authContext.userId));\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}, [userId]);\n\n\treturn (\n\t\t<div className=\"flex flex-col\">\n\t\t\t<ActionButton background=\"green\" className=\"p-1 mx-10 my-5 w-14\">\n\t\t\t\t<i className=\"material-icons\">add</i>\n\t\t\t\t<p>Add</p>\n\t\t\t</ActionButton>\n\t\t\t<RequestList requests={requests} />\n\t\t</div>\n\t);\n}\n\nexport default Requests;\n"]},"metadata":{},"sourceType":"module"}