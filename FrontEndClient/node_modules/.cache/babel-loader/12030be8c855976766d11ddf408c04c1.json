{"ast":null,"code":"var _jsxFileName = \"/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/supervisor/RequestList.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { ContentPageContext } from '../styled/Components';\nimport { AuthContext } from '../App';\nimport apiLink from '../API';\nimport { useRouteMatch, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/** \n* Displays the user list page\n* @function RequestList\n* */\nconst RequestList = props => {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const authContext = useContext(AuthContext);\n  const {\n    url\n  } = useRouteMatch();\n  /* Set the location list in the header of the page */\n\n  const contentPageContext = useContext(ContentPageContext);\n  useEffect(() => {\n    contentPageContext.setLocationList([{\n      title: \"Request list\",\n      url: url\n    }]);\n  }, []);\n  /* Set up the state that holds the requests, and also a value for updating the\n  * list with a callback*/\n\n  const [requests, setRequests] = useState([]);\n  const [shouldUpdate, setShouldUpdate] = useState(0);\n  useEffect(() => {\n    const bearer = \"Bearer \" + authContext.jwtToken;\n    fetch(`${apiLink}/supervisor/${userId}/requests`, {\n      headers: {\n        'Authorization': bearer\n      }\n    }).then(res => res.json()).then(res => {\n      console.log(res.result);\n\n      if (res.status === \"OK\") {\n        const usrs = res.result;\n        setRequests(usrs.filter(usr => usr.id != authContext.userId));\n      } else {\n        alert(res.message);\n      }\n    }).catch(err => console.log(err));\n  }, [userId, shouldUpdate]);\n\n  const updateList = () => {\n    setShouldUpdate(shouldUpdate + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-10 border-l-2 border-r-2 border-b-2 border-gray-800\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-800 flex flex-row justify-center w-full text-gray-300 p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold flex-1 text-center\",\n          children: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold flex-1 text-center\",\n          children: \"Start date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold flex-1 text-center\",\n          children: \"End date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold flex-1 text-center\",\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold flex-1 text-center\",\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), requests.map(request => /*#__PURE__*/_jsxDEV(RequestItem, {\n        request: request,\n        update: updateList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n};\n/** \n* Displays a request list item\n* @function RequestItem\n* @param {Object} props - The props of the component\n* @param {Request} props.request - The request this item represents\n* @param {()=>void} props.update - Callback for updating the main list\n* @returns A single request item for the request list\n* */\n\n\n_s(RequestList, \"N3tltCfVytX6Ilc/wH7CBimLID0=\", false, function () {\n  return [useParams, useRouteMatch];\n});\n\n_c = RequestList;\n\nconst RequestItem = props => {\n  _s2();\n\n  const {\n    request\n  } = props;\n  const circleColor = request.approved ? \"green\" : \"red\";\n  /* The state which determines whether the popup window to modify a user is\n  * shown */\n\n  const [popupShown, setPopupShown] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => setPopupShown(true),\n    className: \"flex flex-row justify-center w-full p-5 border-b border-gray-400\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"flex-1 text-center\",\n      children: request.user.firstname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"flex-1 text-center\",\n      children: request.startDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"flex-1 text-center\",\n      children: request.endDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex justify-center items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `w-6 h-6 rounded-full bg-${circleColor}-700 mr-3`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-row justify-around text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-transparent text-green-700 hover:bg-gray-500 rounded-full p-1\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons hover:text-green-700 hover:cursor-pointer\",\n          children: \"done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-transparent text-red-700\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons hover:text-red-700 hover:cursor-pointer\",\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 3\n  }, this);\n};\n\n_s2(RequestItem, \"3s3o9bVkFE3J9Ei9WDJsh8rCwko=\");\n\n_c2 = RequestItem;\nexport default RequestList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RequestList\");\n$RefreshReg$(_c2, \"RequestItem\");","map":{"version":3,"sources":["/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/supervisor/RequestList.tsx"],"names":["useContext","useEffect","useState","ContentPageContext","AuthContext","apiLink","useRouteMatch","useParams","RequestList","props","userId","authContext","url","contentPageContext","setLocationList","title","requests","setRequests","shouldUpdate","setShouldUpdate","bearer","jwtToken","fetch","headers","then","res","json","console","log","result","status","usrs","filter","usr","id","alert","message","catch","err","updateList","map","request","RequestItem","circleColor","approved","popupShown","setPopupShown","user","firstname","startDate","endDate"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { ContentPage, ContentPageContext, Popup, Label, Input, Select, ActionButton, Form, DangerButton } from '../styled/Components';\nimport { AuthContext } from '../App';\nimport { formatDate } from '../util/Utils';\nimport apiLink from '../API';\nimport { useRouteMatch, useParams } from 'react-router-dom';\nimport { Request, User } from '../types/Common';\n\n/** \n* Displays the user list page\n* @function RequestList\n* */\nconst RequestList = (props: any) => {\n\tconst { userId } = useParams() as any;\n\tconst authContext = useContext(AuthContext);\n\tconst { url } = useRouteMatch();\n\n\t/* Set the location list in the header of the page */\n\tconst contentPageContext = useContext(ContentPageContext);\n\tuseEffect(() => {\n\t\tcontentPageContext.setLocationList([{ title: \"Request list\", url: url }]);\n\t}, []);\n\n\t/* Set up the state that holds the requests, and also a value for updating the\n\t* list with a callback*/\n\tconst [requests, setRequests] = useState<Request[]>([]);\n\tconst [shouldUpdate, setShouldUpdate] = useState(0);\n\tuseEffect(() => {\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tfetch(`${apiLink}/supervisor/${userId}/requests`, {\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res.result);\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tconst usrs = res.result as Request[];\n\t\t\t\t\tsetRequests(usrs.filter(usr => usr.id != authContext.userId));\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}, [userId, shouldUpdate]);\n\n\tconst updateList = () => {\n\t\tsetShouldUpdate(shouldUpdate + 1);\n\t}\n\n\treturn (\n\t\t<div className=\"flex flex-col\">\n\n\n\t\t\t<div className=\"mx-10 border-l-2 border-r-2 border-b-2 border-gray-800\">\n\t\t\t\t<div className=\"bg-gray-800 flex flex-row justify-center w-full text-gray-300 p-2\">\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">User</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Start date</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">End date</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Status</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Actions</p>\n\t\t\t\t</div>\n\t\t\t\t{requests.map(request => (\n\t\t\t\t\t<RequestItem request={request} update={updateList} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n/** \n* Displays a request list item\n* @function RequestItem\n* @param {Object} props - The props of the component\n* @param {Request} props.request - The request this item represents\n* @param {()=>void} props.update - Callback for updating the main list\n* @returns A single request item for the request list\n* */\nconst RequestItem = (props: { request: Request, update: () => void }) => {\n\tconst { request } = props;\n\tconst circleColor = request.approved ? \"green\" : \"red\";\n\n\t/* The state which determines whether the popup window to modify a user is\n\t* shown */\n\tconst [popupShown, setPopupShown] = useState(false);\n\treturn (\n\t\t<div onClick={() => setPopupShown(true)}\n\t\t\tclassName=\"flex flex-row justify-center w-full p-5 border-b border-gray-400\">\n\t\t\t<p className=\"flex-1 text-center\">{request.user.firstname}</p>\n\t\t\t<p className=\"flex-1 text-center\">{request.startDate}</p>\n\t\t\t<p className=\"flex-1 text-center\">{request.endDate}</p>\n\t\t\t<div className=\"flex-1 flex justify-center items-center\">\n\t\t\t\t<div className={`w-6 h-6 rounded-full bg-${circleColor}-700 mr-3`}></div>\n\t\t\t</div>\n\t\t\t<div className=\"flex-1 flex flex-row justify-around text-center\">\n\t\t\t\t<button className=\"bg-transparent text-green-700 hover:bg-gray-500 rounded-full p-1\">\n\t\t\t\t\t<i className=\"material-icons hover:text-green-700 hover:cursor-pointer\">done</i>\n\t\t\t\t</button>\n\t\t\t\t<button className=\"bg-transparent text-red-700\">\n\t\t\t\t\t<i className=\"material-icons hover:text-red-700 hover:cursor-pointer\">cancel</i>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n\n\nexport default RequestList;\n"]},"metadata":{},"sourceType":"module"}