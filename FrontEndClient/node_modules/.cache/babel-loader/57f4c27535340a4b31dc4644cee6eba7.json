{"ast":null,"code":"var _jsxFileName = \"/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/supervisor/UserList.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { ContentPageContext } from '../styled/Components';\nimport { AuthContext } from '../App';\nimport apiLink from '../API';\nimport { Switch, Route, useRouteMatch, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/** The users page */\nconst Users = props => {\n  _s();\n\n  const {\n    url,\n    path\n  } = useRouteMatch();\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: `${path}/:requestsUserId/requests`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${path}/`,\n      children: /*#__PURE__*/_jsxDEV(UserList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n};\n/** \n* Displays the user list page\n* @function UserList\n* */\n\n\n_s(Users, \"1MAQBxDT46WWsBhoM12Ck4Kdmsw=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = Users;\n\nconst UserList = props => {\n  _s2();\n\n  const {\n    userId\n  } = useParams();\n  const authContext = useContext(AuthContext);\n  const {\n    url\n  } = useRouteMatch();\n  /* Set the location list in the header of the page */\n\n  const contentPageContext = useContext(ContentPageContext);\n  useEffect(() => {\n    contentPageContext.setLocationList([{\n      title: \"User list\",\n      url: url\n    }]);\n  }, []);\n  /* Set up the state that holds the users, and also a value for updating the\n  * list with a callback*/\n\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    const bearer = \"Bearer \" + authContext.jwtToken;\n    fetch(`${apiLink}/supervisor/${userId}/users`, {\n      headers: {\n        'Authorization': bearer\n      }\n    }).then(res => res.json()).then(res => {\n      if (res.status === \"OK\") {\n        const usrs = res.result;\n        setUsers(usrs.filter(usr => usr.id != authContext.userId));\n      } else {\n        alert(res.message);\n      }\n    }).catch(err => console.log(err));\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-10 border-l-2 border-r-2 border-b-2 border-gray-800\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-800 flex flex-row justify-center w-full text-gray-300 p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold flex-1 text-center\",\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold flex-1 text-center\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold flex-1 text-center\",\n          children: \"Firstname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold flex-1 text-center\",\n          children: \"Lastname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold flex-1 text-center\",\n          children: \"See requests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(UserItem, {\n        user: user\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 24\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n};\n/**\n* Displays a user list item\n* @function UserItem\n* @param {Object} props - The props of the component\n\t\t\t* @param {User} props.user - The user this item represents\n\t\t\t* @param {User[]} props.supervisors - The list of available supervisors\n\t\t\t* @returns A single user item for the user list\n\t\t\t* */\n\n\n_s2(UserList, \"EB49xR2UUEreurenAr4AgHyM5RY=\", false, function () {\n  return [useParams, useRouteMatch];\n});\n\n_c2 = UserList;\n\nconst UserItem = props => {\n  const {\n    user\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-row justify-center w-full p-5 border-b border-gray-400\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"flex-1 text-center\",\n      children: user.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"flex-1 text-center\",\n      children: user.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"flex-1 text-center\",\n      children: user.firstname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"flex-1 text-center\",\n      children: user.lastname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex justify-center items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"focus:outline-none flex justify-center  items-center bg-transparent text-black hover:bg-gray-300 rounded-full p-1\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons hover:cursor-pointer\",\n          children: \"arrow_right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 3\n  }, this);\n};\n/** Displays the requests of a user */\n\n\n_c3 = UserItem;\n\nconst UserRequestList = props => {\n  _s3();\n\n  const {\n    requestsUserId\n  } = useParams();\n  const authContext = useContext(AuthContext);\n  const {\n    url\n  } = useRouteMatch();\n  /* Set the location list in the header of the page */\n\n  const contentPageContext = useContext(ContentPageContext);\n  useEffect(() => {\n    const locationList = contentPageContext.getLocationList();\n    contentPageContext.setLocationList([...locationList, {\n      title: \"Name\",\n      url: url\n    }]);\n  }, []);\n  /* Set up the state that holds the requests, and also a value for updating the\n  * list with a callback*/\n\n  const [requests, setRequests] = useState([]);\n  const [shouldUpdate, setShouldUpdate] = useState(0);\n  useEffect(() => {\n    const bearer = \"Bearer \" + authContext.jwtToken;\n    fetch(`${apiLink}/supervisor/${authContext.userId}/users/${requestsUserId}/requests`, {\n      headers: {\n        'Authorization': bearer\n      }\n    }).then(res => res.json()).then(res => {\n      console.log(res.result);\n\n      if (res.status === \"OK\") {\n        setRequests(res.result);\n      } else {\n        alert(res.message);\n      }\n    }).catch(err => console.log(err));\n  }, [authContext.userId, requestsUserId]);\n\n  const updateList = () => {\n    setShouldUpdate(shouldUpdate + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-10 border-l-2 border-r-2 border-b-2 border-gray-800\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-800 flex flex-row justify-center w-full text-gray-300 p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold flex-1 text-center\",\n          children: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold flex-1 text-center\",\n          children: \"Start date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold flex-1 text-center\",\n          children: \"End date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold flex-1 text-center\",\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold flex-1 text-center\",\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 5\n      }, this), requests.map(request => /*#__PURE__*/_jsxDEV(RequestItem, {\n        request: request,\n        update: updateList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 3\n  }, this);\n};\n\n_s3(UserRequestList, \"N3tltCfVytX6Ilc/wH7CBimLID0=\", false, function () {\n  return [useParams, useRouteMatch];\n});\n\n_c4 = UserRequestList;\nexport default Users;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Users\");\n$RefreshReg$(_c2, \"UserList\");\n$RefreshReg$(_c3, \"UserItem\");\n$RefreshReg$(_c4, \"UserRequestList\");","map":{"version":3,"sources":["/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/supervisor/UserList.tsx"],"names":["useContext","useEffect","useState","ContentPageContext","AuthContext","apiLink","Switch","Route","useRouteMatch","useParams","Users","props","url","path","UserList","userId","authContext","contentPageContext","setLocationList","title","users","setUsers","bearer","jwtToken","fetch","headers","then","res","json","status","usrs","result","filter","usr","id","alert","message","catch","err","console","log","map","user","UserItem","type","email","firstname","lastname","UserRequestList","requestsUserId","locationList","getLocationList","requests","setRequests","shouldUpdate","setShouldUpdate","updateList","request"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { ContentPage, ContentPageContext, Popup, Label, Input, Select, ActionButton, Form, DangerButton } from '../styled/Components';\nimport { AuthContext } from '../App';\nimport { formatDate } from '../util/Utils';\nimport apiLink from '../API';\nimport { Switch, Route, Link, useHistory, useRouteMatch, useParams } from 'react-router-dom';\nimport { User } from '../types/Common';\n\n\n/** The users page */\nconst Users = (props: any) => {\n\tconst { url, path } = useRouteMatch();\n\treturn (\n\t\t<Switch>\n\n\t\t\t<Route path={`${path}/:requestsUserId/requests`}>\n\t\t\t\t\n\t\t\t</Route>\n\n\t\t\t<Route path={`${path}/`}>\n\t\t\t\t<UserList />\t\n\t\t\t</Route>\n\n\t\t</Switch>\n\t);\n}\n\n/** \n* Displays the user list page\n* @function UserList\n* */\nconst UserList = (props: any) => {\n\tconst { userId } = useParams() as any;\n\tconst authContext = useContext(AuthContext);\n\tconst { url } = useRouteMatch();\n\n\t/* Set the location list in the header of the page */\n\tconst contentPageContext = useContext(ContentPageContext);\n\tuseEffect(() => {\n\t\tcontentPageContext.setLocationList([{ title: \"User list\", url: url }]);\n\t}, []);\n\n\t/* Set up the state that holds the users, and also a value for updating the\n\t* list with a callback*/\n\tconst [users, setUsers] = useState<User[]>([]);\n\tuseEffect(() => {\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tfetch(`${apiLink}/supervisor/${userId}/users`, {\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tconst usrs = res.result as User[];\n\t\t\t\t\tsetUsers(usrs.filter(usr => usr.id != authContext.userId));\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}, [userId]);\n\n\treturn (\n\t\t<div className=\"flex flex-col\">\n\t\t\t<div className=\"mx-10 border-l-2 border-r-2 border-b-2 border-gray-800\">\n\t\t\t\t<div className=\"bg-gray-800 flex flex-row justify-center w-full text-gray-300 p-2\">\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Type</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Email</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Firstname</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Lastname</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">See requests</p>\n\t\t\t\t</div>\n\t\t\t\t{users.map(user => <UserItem key={user.id} user={user} />)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n/**\n* Displays a user list item\n* @function UserItem\n* @param {Object} props - The props of the component\n\t\t\t* @param {User} props.user - The user this item represents\n\t\t\t* @param {User[]} props.supervisors - The list of available supervisors\n\t\t\t* @returns A single user item for the user list\n\t\t\t* */\nconst UserItem = (props: { user: User }) => {\n\tconst { user } = props;\n\treturn (\n\t\t<div className=\"flex flex-row justify-center w-full p-5 border-b border-gray-400\">\n\t\t\t<p className=\"flex-1 text-center\">{user.type}</p>\n\t\t\t<p className=\"flex-1 text-center\">{user.email}</p>\n\t\t\t<p className=\"flex-1 text-center\">{user.firstname}</p>\n\t\t\t<p className=\"flex-1 text-center\">{user.lastname}</p>\n\t\t\t<div className=\"flex-1 flex justify-center items-center\">\n\t\t\t\t<button className=\"focus:outline-none flex justify-center \n\t\t\t\t\titems-center bg-transparent text-black hover:bg-gray-300 rounded-full p-1\">\n\t\t\t\t\t<i className=\"material-icons hover:cursor-pointer\">arrow_right</i>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n/** Displays the requests of a user */\nconst UserRequestList = (props: any) => {\n\tconst { requestsUserId } = useParams() as any;\n\tconst authContext = useContext(AuthContext);\n\tconst { url } = useRouteMatch();\n\n\t/* Set the location list in the header of the page */\n\tconst contentPageContext = useContext(ContentPageContext);\n\tuseEffect(() => {\n\t\tconst locationList = contentPageContext.getLocationList();\n\t\tcontentPageContext.setLocationList([...locationList, {title: \"Name\", url: url}]);\n\t}, []);\n\n\t/* Set up the state that holds the requests, and also a value for updating the\n\t* list with a callback*/\n\tconst [requests, setRequests] = useState<Request[]>([]);\n\tconst [shouldUpdate, setShouldUpdate] = useState(0);\n\tuseEffect(() => {\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tfetch(`${apiLink}/supervisor/${authContext.userId}/users/${requestsUserId}/requests`, {\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res.result);\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tsetRequests(res.result);\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}, [authContext.userId, requestsUserId]);\n\n\tconst updateList = () => {\n\t\tsetShouldUpdate(shouldUpdate + 1);\n\t}\n\n\treturn (\n\t\t<div className=\"flex flex-col\">\n\n\n\t\t\t<div className=\"mx-10 border-l-2 border-r-2 border-b-2 border-gray-800\">\n\t\t\t\t<div className=\"bg-gray-800 flex flex-row justify-center w-full text-gray-300 p-2\">\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">User</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Start date</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">End date</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Status</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Actions</p>\n\t\t\t\t</div>\n\t\t\t\t{requests.map(request => (\n\t\t\t\t\t<RequestItem request={request} update={updateList} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}