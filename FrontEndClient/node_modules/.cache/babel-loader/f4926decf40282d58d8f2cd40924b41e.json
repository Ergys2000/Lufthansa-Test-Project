{"ast":null,"code":"var _jsxFileName = \"/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/supervisor/RequestList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { ContentPageContext } from '../styled/Components';\nimport { AuthContext } from '../App';\nimport apiLink from '../API';\nimport { useRouteMatch, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/** \n* Displays the user list page\n* @function RequestList\n* */\nconst RequestList = props => {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const authContext = useContext(AuthContext);\n  const {\n    url\n  } = useRouteMatch();\n  /* Set the location list in the header of the page */\n\n  const contentPageContext = useContext(ContentPageContext);\n  useEffect(() => {\n    contentPageContext.setLocationList([{\n      title: \"User list\",\n      url: url\n    }]);\n  }, []);\n  /* Set up the state that holds the users, and also a value for updating the\n  * list with a callback*/\n\n  const [users, setUsers] = useState([]);\n  const [shouldUpdate, setShouldUpdate] = useState(0);\n  useEffect(() => {\n    const bearer = \"Bearer \" + authContext.jwtToken;\n    fetch(`${apiLink}/admin/${userId}/users`, {\n      headers: {\n        'Authorization': bearer\n      }\n    }).then(res => res.json()).then(res => {\n      if (res.status === \"OK\") {\n        const usrs = res.result;\n        setUsers(usrs.filter(usr => usr.id != authContext.userId));\n      } else {\n        alert(res.message);\n      }\n    }).catch(err => console.log(err));\n  }, [userId, shouldUpdate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-10 border-l-2 border-r-2 border-b-2 border-gray-800\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-800 flex flex-row justify-center w-full text-gray-300 p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold flex-1 text-center\",\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold flex-1 text-center\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold flex-1 text-center\",\n          children: \"Firstname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold flex-1 text-center\",\n          children: \"Lastname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold flex-1 text-center\",\n          children: \"Supervisor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n};\n\n_s(RequestList, \"72sNehSxoB39b+i3vrRx8vmBuXc=\", false, function () {\n  return [useParams, useRouteMatch];\n});\n\n_c = RequestList;\nexport default RequestList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestList\");","map":{"version":3,"sources":["/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/supervisor/RequestList.tsx"],"names":["useContext","useEffect","useState","ContentPageContext","AuthContext","apiLink","useRouteMatch","useParams","RequestList","props","userId","authContext","url","contentPageContext","setLocationList","title","users","setUsers","shouldUpdate","setShouldUpdate","bearer","jwtToken","fetch","headers","then","res","json","status","usrs","result","filter","usr","id","alert","message","catch","err","console","log"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAAsBC,kBAAtB,QAA+G,sBAA/G;AACA,SAASC,WAAT,QAA4B,QAA5B;AAEA,OAAOC,OAAP,MAAoB,QAApB;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,kBAAzC;;;AAGA;AACA;AACA;AACA;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAgB;AAAA;;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAaH,SAAS,EAA5B;AACA,QAAMI,WAAW,GAAGX,UAAU,CAACI,WAAD,CAA9B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAUN,aAAa,EAA7B;AAEA;;AACA,QAAMO,kBAAkB,GAAGb,UAAU,CAACG,kBAAD,CAArC;AACAF,EAAAA,SAAS,CAAC,MAAM;AACfY,IAAAA,kBAAkB,CAACC,eAAnB,CAAmC,CAAC;AAAEC,MAAAA,KAAK,EAAE,WAAT;AAAsBH,MAAAA,GAAG,EAAEA;AAA3B,KAAD,CAAnC;AACA,GAFQ,EAEN,EAFM,CAAT;AAIA;AACD;;AACC,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,CAAD,CAAhD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMmB,MAAM,GAAG,YAAYT,WAAW,CAACU,QAAvC;AACAC,IAAAA,KAAK,CAAE,GAAEjB,OAAQ,UAASK,MAAO,QAA5B,EAAqC;AACzCa,MAAAA,OAAO,EAAE;AACR,yBAAiBH;AADT;AADgC,KAArC,CAAL,CAKEI,IALF,CAKOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALd,EAMEF,IANF,CAMOC,GAAG,IAAI;AACZ,UAAIA,GAAG,CAACE,MAAJ,KAAe,IAAnB,EAAyB;AACxB,cAAMC,IAAI,GAAGH,GAAG,CAACI,MAAjB;AACAZ,QAAAA,QAAQ,CAACW,IAAI,CAACE,MAAL,CAAYC,GAAG,IAAIA,GAAG,CAACC,EAAJ,IAAUrB,WAAW,CAACD,MAAzC,CAAD,CAAR;AACA,OAHD,MAGO;AACNuB,QAAAA,KAAK,CAACR,GAAG,CAACS,OAAL,CAAL;AACA;AACD,KAbF,EAaIC,KAbJ,CAaUC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAbjB;AAcA,GAhBQ,EAgBN,CAAC1B,MAAD,EAASQ,YAAT,CAhBM,CAAT;AAkBA,sBACC;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BAGC;AAAK,MAAA,SAAS,EAAC,wDAAf;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,mEAAf;AAAA,gCACC;AAAG,UAAA,SAAS,EAAC,8BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAG,UAAA,SAAS,EAAC,8BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC;AAAG,UAAA,SAAS,EAAC,8BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,eAIC;AAAG,UAAA,SAAS,EAAC,8BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD,eAKC;AAAG,UAAA,SAAS,EAAC,8BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAHD;AAAA;AAAA;AAAA;AAAA,UADD;AAeA,CAhDD;;GAAMV,W;UACcD,S,EAEHD,a;;;KAHXE,W;AAkDN,eAAeA,WAAf","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { ContentPage, ContentPageContext, Popup, Label, Input, Select, ActionButton, Form, DangerButton } from '../styled/Components';\nimport { AuthContext } from '../App';\nimport { formatDate } from '../util/Utils';\nimport apiLink from '../API';\nimport { useRouteMatch, useParams } from 'react-router-dom';\nimport { User } from '../types/Common';\n\n/** \n* Displays the user list page\n* @function RequestList\n* */\nconst RequestList = (props: any) => {\n\tconst { userId } = useParams() as any;\n\tconst authContext = useContext(AuthContext);\n\tconst { url } = useRouteMatch();\n\n\t/* Set the location list in the header of the page */\n\tconst contentPageContext = useContext(ContentPageContext);\n\tuseEffect(() => {\n\t\tcontentPageContext.setLocationList([{ title: \"User list\", url: url }]);\n\t}, []);\n\n\t/* Set up the state that holds the users, and also a value for updating the\n\t* list with a callback*/\n\tconst [users, setUsers] = useState<User[]>([]);\n\tconst [shouldUpdate, setShouldUpdate] = useState(0);\n\tuseEffect(() => {\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tfetch(`${apiLink}/admin/${userId}/users`, {\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tconst usrs = res.result as User[];\n\t\t\t\t\tsetUsers(usrs.filter(usr => usr.id != authContext.userId));\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}, [userId, shouldUpdate]);\n\n\treturn (\n\t\t<div className=\"flex flex-col\">\n\n\n\t\t\t<div className=\"mx-10 border-l-2 border-r-2 border-b-2 border-gray-800\">\n\t\t\t\t<div className=\"bg-gray-800 flex flex-row justify-center w-full text-gray-300 p-2\">\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Type</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Email</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Firstname</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Lastname</p>\n\t\t\t\t\t<p className=\"font-bold flex-1 text-center\">Supervisor</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default RequestList;\n"]},"metadata":{},"sourceType":"module"}