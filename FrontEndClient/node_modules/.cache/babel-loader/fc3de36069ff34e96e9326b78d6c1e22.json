{"ast":null,"code":"var _jsxFileName = \"/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/supervisor/Requests.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { ContentPageContext } from '../styled/Components';\nimport { AuthContext } from '../App';\nimport apiLink from '../API';\nimport { useRouteMatch, useParams } from 'react-router-dom';\nimport RequestList from './RequestList';\n/** \n* Displays the user list page\n* @function RequestList\n* */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Requests = props => {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const authContext = useContext(AuthContext);\n  const {\n    url\n  } = useRouteMatch();\n  /* Set the location list in the header of the page */\n\n  const contentPageContext = useContext(ContentPageContext);\n  useEffect(() => {\n    contentPageContext.setLocationList([{\n      title: \"Request list\",\n      url: url\n    }]);\n  }, []);\n  /* Set up the state that holds the requests, and also a value for updating the\n  * list with a callback*/\n\n  const [requests, setRequests] = useState([]);\n  const [shouldUpdate, setShouldUpdate] = useState(0);\n  useEffect(() => {\n    const bearer = \"Bearer \" + authContext.jwtToken;\n    fetch(`${apiLink}/supervisor/${userId}/requests`, {\n      headers: {\n        'Authorization': bearer\n      }\n    }).then(res => res.json()).then(res => {\n      if (res.status === \"OK\") {\n        const usrs = res.result;\n        setRequests(usrs.filter(usr => usr.id != authContext.userId));\n      } else {\n        alert(res.message);\n      }\n    }).catch(err => console.log(err));\n  }, [userId, shouldUpdate]);\n\n  const updateList = () => {\n    setShouldUpdate(shouldUpdate + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(RequestList, {\n    requests: requests\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n};\n/** \n* Displays a request list item\n* @function RequestItem\n* @param {Object} props - The props of the component\n* @param {Request} props.request - The request this item represents\n* @param {()=>void} props.update - Callback for updating the main list\n* @returns A single request item for the request list\n* */\n\n\n_s(Requests, \"N3tltCfVytX6Ilc/wH7CBimLID0=\", false, function () {\n  return [useParams, useRouteMatch];\n});\n\n_c = Requests;\n\nconst RequestItem = props => {\n  _s2();\n\n  const authContext = useContext(AuthContext);\n  const [request, setRequest] = useState(props.request);\n  /* The state which determines whether the popup window to modify a user is\n  * shown */\n\n  const [popupShown, setPopupShown] = useState(false);\n\n  const onIconClicked = async value => {\n    const bearer = \"Bearer \" + authContext.jwtToken;\n    await fetch(`${apiLink}/supervisor/${authContext.userId}/requests/${request.id}?approved=${value}`, {\n      method: \"put\",\n      headers: {\n        \"Authorization\": bearer\n      }\n    }).then(res => res.json()).then(res => {\n      if (res.status === \"OK\") {\n        alert(res.message);\n        setRequest({ ...request,\n          approved: value\n        });\n      } else {\n        alert(\"Sorry something went wrong!\");\n      }\n    }).catch(err => console.log(err));\n  };\n\n  let circleColor = \"bg-gray-400\";\n\n  if (request.approved === true) {\n    circleColor = \"bg-green-700\";\n  } else if (request.approved === false) {\n    circleColor = \"bg-red-700\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => setPopupShown(true),\n    className: \"flex flex-row justify-center w-full p-5 border-b border-gray-400\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"flex-1 text-center\",\n      children: `${request.user.firstname} ${request.user.lastname}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"flex-1 text-center\",\n      children: new Date(request.createdOn).toDateString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"flex-1 text-center\",\n      children: new Date(request.startDate).toDateString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"flex-1 text-center\",\n      children: new Date(request.endDate).toDateString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex justify-center items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `w-6 h-6 rounded-full ${circleColor} mr-3`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-row justify-around text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"focus:outline-none flex justify-center  items-center bg-transparent text-green-700 hover:bg-gray-300 rounded-full p-1\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: () => onIconClicked(true),\n          className: \"material-icons hover:text-green-700 hover:cursor-pointer\",\n          children: \"done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"focus:outline-none flex justify-center  items-center bg-transparent text-red-700 hover:bg-gray-300 rounded-full p-1\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: () => onIconClicked(false),\n          className: \"material-icons hover:text-red-700 hover:cursor-pointer\",\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 3\n  }, this);\n};\n\n_s2(RequestItem, \"7K7RwG+bd9Gy5inCFVfEmKDN6rU=\");\n\n_c2 = RequestItem;\nexport default Requests;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Requests\");\n$RefreshReg$(_c2, \"RequestItem\");","map":{"version":3,"sources":["/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/supervisor/Requests.tsx"],"names":["useContext","useEffect","useState","ContentPageContext","AuthContext","apiLink","useRouteMatch","useParams","RequestList","Requests","props","userId","authContext","url","contentPageContext","setLocationList","title","requests","setRequests","shouldUpdate","setShouldUpdate","bearer","jwtToken","fetch","headers","then","res","json","status","usrs","result","filter","usr","id","alert","message","catch","err","console","log","updateList","RequestItem","request","setRequest","popupShown","setPopupShown","onIconClicked","value","method","approved","circleColor","user","firstname","lastname","Date","createdOn","toDateString","startDate","endDate"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { ContentPage, ContentPageContext, Popup, Label, Input, Select, ActionButton, Form, DangerButton } from '../styled/Components';\nimport { AuthContext } from '../App';\nimport { formatDate } from '../util/Utils';\nimport apiLink from '../API';\nimport { useRouteMatch, useParams } from 'react-router-dom';\nimport { Request, User } from '../types/Common';\nimport RequestList from './RequestList';\n\n/** \n* Displays the user list page\n* @function RequestList\n* */\nconst Requests = (props: any) => {\n\tconst { userId } = useParams() as any;\n\tconst authContext = useContext(AuthContext);\n\tconst { url } = useRouteMatch();\n\n\t/* Set the location list in the header of the page */\n\tconst contentPageContext = useContext(ContentPageContext);\n\tuseEffect(() => {\n\t\tcontentPageContext.setLocationList([{ title: \"Request list\", url: url }]);\n\t}, []);\n\n\t/* Set up the state that holds the requests, and also a value for updating the\n\t* list with a callback*/\n\tconst [requests, setRequests] = useState<Request[]>([]);\n\tconst [shouldUpdate, setShouldUpdate] = useState(0);\n\tuseEffect(() => {\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tfetch(`${apiLink}/supervisor/${userId}/requests`, {\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tconst usrs = res.result as Request[];\n\t\t\t\t\tsetRequests(usrs.filter(usr => usr.id != authContext.userId));\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}, [userId, shouldUpdate]);\n\n\tconst updateList = () => {\n\t\tsetShouldUpdate(shouldUpdate + 1);\n\t}\n\n\treturn (\n\t\t<RequestList requests={requests} />\n\t);\n}\n\n/** \n* Displays a request list item\n* @function RequestItem\n* @param {Object} props - The props of the component\n* @param {Request} props.request - The request this item represents\n* @param {()=>void} props.update - Callback for updating the main list\n* @returns A single request item for the request list\n* */\nconst RequestItem = (props: { request: Request, update: () => void }) => {\n\tconst authContext = useContext(AuthContext);\n\tconst [request, setRequest] = useState(props.request);\n\n\t/* The state which determines whether the popup window to modify a user is\n\t* shown */\n\tconst [popupShown, setPopupShown] = useState(false);\n\n\tconst onIconClicked = async (value: boolean) => {\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tawait fetch(`${apiLink}/supervisor/${authContext.userId}/requests/${request.id}?approved=${value}`, {\n\t\t\tmethod: \"put\",\n\t\t\theaders: {\n\t\t\t\t\"Authorization\": bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\talert(res.message);\n\t\t\t\t\tsetRequest({ ...request, approved: value });\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Sorry something went wrong!\");\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}\n\tlet circleColor = \"bg-gray-400\";\n\tif(request.approved === true) {\n\t\tcircleColor = \"bg-green-700\";\n\t} else if (request.approved === false) {\n\t\tcircleColor = \"bg-red-700\";\n\t}\n\treturn (\n\t\t<div onClick={() => setPopupShown(true)}\n\t\t\tclassName=\"flex flex-row justify-center w-full p-5 border-b border-gray-400\">\n\t\t\t<p className=\"flex-1 text-center\">{`${request.user.firstname} ${request.user.lastname}`}</p>\n\t\t\t<p className=\"flex-1 text-center\">{new Date(request.createdOn).toDateString()}</p>\n\t\t\t<p className=\"flex-1 text-center\">{new Date(request.startDate).toDateString()}</p>\n\t\t\t<p className=\"flex-1 text-center\">{new Date(request.endDate).toDateString()}</p>\n\t\t\t<div className=\"flex-1 flex justify-center items-center\">\n\t\t\t\t<div className={`w-6 h-6 rounded-full ${circleColor} mr-3`}></div>\n\t\t\t</div>\n\t\t\t<div className=\"flex-1 flex flex-row justify-around text-center\">\n\t\t\t\t<button className=\"focus:outline-none flex justify-center \n\t\t\t\t\titems-center bg-transparent text-green-700 hover:bg-gray-300 rounded-full p-1\">\n\t\t\t\t\t<i onClick={() => onIconClicked(true)} className=\"material-icons hover:text-green-700 hover:cursor-pointer\">done</i>\n\t\t\t\t</button>\n\t\t\t\t<button className=\"focus:outline-none flex justify-center \n\t\t\t\t\titems-center bg-transparent text-red-700 hover:bg-gray-300 rounded-full p-1\">\n\t\t\t\t\t<i onClick={() => onIconClicked(false)} className=\"material-icons hover:text-red-700 hover:cursor-pointer\">cancel</i>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n\n\nexport default Requests;\n"]},"metadata":{},"sourceType":"module"}