{"ast":null,"code":"var _jsxFileName = \"/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/admin/UserList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { ContentPageContext } from '../styled/Components';\nimport { AuthContext } from '../App';\nimport apiLink from '../API';\nimport { useRouteMatch, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserList = props => {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const authContext = useContext(AuthContext);\n  const contentPageContext = useContext(ContentPageContext);\n  const {\n    url\n  } = useRouteMatch();\n  useEffect(() => {\n    contentPageContext.setLocationList([{\n      title: \"User list\",\n      url: url\n    }]);\n  }, []);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    const bearer = \"Bearer \" + authContext.jwtToken;\n    console.log(bearer);\n    fetch(`${apiLink}/admin/${userId}/users`, {\n      headers: {\n        'Authorization': bearer\n      }\n    }).then(res => res.json()).then(res => {\n      if (res.status === \"OK\") {\n        setUsers(res.result);\n        console.log(res);\n      } else {\n        alert(res.message);\n      }\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n};\n\n_s(UserList, \"AXWvYFB7R7yGdSCoAXQRRfS9TMI=\", false, function () {\n  return [useParams, useRouteMatch];\n});\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/home/ergys/Desktop/Projects/Java/lufthansa-test-project/FrontEndClient/src/admin/UserList.tsx"],"names":["useContext","useEffect","useState","ContentPageContext","AuthContext","apiLink","useRouteMatch","useParams","UserList","props","userId","authContext","contentPageContext","url","setLocationList","title","users","setUsers","bearer","jwtToken","console","log","fetch","headers","then","res","json","status","result","alert","message","catch","err"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAAsBC,kBAAtB,QAAgD,sBAAhD;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,OAAOC,OAAP,MAAoB,QAApB;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,kBAAzC;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAgB;AAAA;;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAaH,SAAS,EAA5B;AACA,QAAMI,WAAW,GAAGX,UAAU,CAACI,WAAD,CAA9B;AACA,QAAMQ,kBAAkB,GAAGZ,UAAU,CAACG,kBAAD,CAArC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAUP,aAAa,EAA7B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACfW,IAAAA,kBAAkB,CAACE,eAAnB,CAAmC,CAAC;AAAEC,MAAAA,KAAK,EAAE,WAAT;AAAsBF,MAAAA,GAAG,EAAEA;AAA3B,KAAD,CAAnC;AACA,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMiB,MAAM,GAAG,YAAYP,WAAW,CAACQ,QAAvC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAI,IAAAA,KAAK,CAAE,GAAEjB,OAAQ,UAASK,MAAO,QAA5B,EAAqC;AACzCa,MAAAA,OAAO,EAAE;AACR,yBAAiBL;AADT;AADgC,KAArC,CAAL,CAKEM,IALF,CAKOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALd,EAMEF,IANF,CAMOC,GAAG,IAAI;AACZ,UAAIA,GAAG,CAACE,MAAJ,KAAe,IAAnB,EAAyB;AACxBV,QAAAA,QAAQ,CAACQ,GAAG,CAACG,MAAL,CAAR;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,OAHD,MAGO;AACNI,QAAAA,KAAK,CAACJ,GAAG,CAACK,OAAL,CAAL;AACA;AACD,KAbF,EAaIC,KAbJ,CAaUC,GAAG,IAAIZ,OAAO,CAACC,GAAR,CAAYW,GAAZ,CAbjB;AAcA,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBACC;AAAA,2BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAnCD;;GAAMxB,Q;UACcD,S,EAGHD,a;;;KAJXE,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { ContentPage, ContentPageContext } from '../styled/Components';\nimport { AuthContext } from '../App';\nimport apiLink from '../API';\nimport { useRouteMatch, useParams } from 'react-router-dom';\n\nconst UserList = (props: any) => {\n\tconst { userId } = useParams() as any;\n\tconst authContext = useContext(AuthContext);\n\tconst contentPageContext = useContext(ContentPageContext);\n\tconst { url } = useRouteMatch();\n\n\tuseEffect(() => {\n\t\tcontentPageContext.setLocationList([{ title: \"User list\", url: url }]);\n\t}, []);\n\n\tconst [users, setUsers] = useState([]);\n\tuseEffect(() => {\n\t\tconst bearer = \"Bearer \" + authContext.jwtToken;\n\t\tconsole.log(bearer);\n\t\tfetch(`${apiLink}/admin/${userId}/users`, {\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tsetUsers(res.result);\n\t\t\t\t\tconsole.log(res);\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>User list</h2>\n\t\t</div>\n\t);\n}\n\nexport default UserList;\n"]},"metadata":{},"sourceType":"module"}